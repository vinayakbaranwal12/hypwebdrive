{"version":3,"file":"drive-routes.3540b3ec.js","sources":["../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryObserver.esm.js","../../../node_modules/@tanstack/react-query/build/lib/useInfiniteQuery.esm.js","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../common/resources/client/ui/layout/dashboard-content-header.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../common/resources/client/ui/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../common/resources/client/workspace/requests/create-workspace.ts","../../../common/resources/client/workspace/new-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/workspace-with-members.ts","../../../common/resources/client/workspace/requests/invite-members.ts","../../../common/resources/client/workspace/requests/resend-invite.ts","../../../common/resources/client/utils/string/is-email.ts","../../../common/resources/client/workspace/requests/change-role.ts","../../../common/resources/client/workspace/requests/remove-member.ts","../../../common/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/resources/client/workspace/workspace-members-dialog.tsx","../../../common/resources/client/workspace/requests/update-workspace.ts","../../../common/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/delete-workspace.ts","../../../common/resources/client/workspace/workspace-selector.tsx","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../common/resources/client/ui/tree/tree-context.tsx","../../../common/resources/client/ui/tree/render-tree.ts","../../../common/resources/client/ui/tree/tree-label.tsx","../../../common/resources/client/ui/tree/tree-item.tsx","../../../common/resources/client/ui/tree/tree.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../resources/client/drive/search/drive-search-filters.ts","../../../resources/client/drive/search/search-filter-list.tsx","../../../common/resources/client/ui/interactions/utils/restrict-resizable-within-boundary.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../common/resources/client/ui/interactions/utils/rects-intersect.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/drive/files/drive-context-menu.tsx","../../../common/resources/client/utils/hooks/is-touch-device.ts","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/file-view/file-table/file-table-mobile-columns.tsx","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/page-breadcrumbs.tsx","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.tsx","../../../resources/client/drive/details-sidebar/requests/use-sync-entry-tags.ts","../../../resources/client/drive/details-sidebar/requests/use-file-entry-tags.ts","../../../resources/client/drive/details-sidebar/details-sidebar-tags.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.tsx","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../common/resources/client/utils/string/random-string.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.tsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../common/resources/client/ui/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/drive-routes.tsx"],"sourcesContent":["import { QueryObserver } from './queryObserver.esm.js';\nimport { infiniteQueryBehavior, hasNextPage, hasPreviousPage } from './infiniteQueryBehavior.esm.js';\n\nclass InfiniteQueryObserver extends QueryObserver {\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(client, options) {\n    super(client, options);\n  }\n\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    super.setOptions({ ...options,\n      behavior: infiniteQueryBehavior()\n    }, notifyOptions);\n  }\n\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n\n  fetchNextPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  fetchPreviousPage({\n    pageParam,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam\n        }\n      }\n    });\n  }\n\n  createResult(query, options) {\n    var _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet, _state$data, _state$data2;\n\n    const {\n      state\n    } = query;\n    const result = super.createResult(query, options);\n    const {\n      isFetching,\n      isRefetching\n    } = result;\n    const isFetchingNextPage = isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward';\n    const isFetchingPreviousPage = isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward';\n    return { ...result,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage,\n      isFetchingPreviousPage,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n  }\n\n}\n\nexport { InfiniteQueryObserver };\n//# sourceMappingURL=infiniteQueryObserver.esm.js.map\n","import { parseQueryArgs, InfiniteQueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.esm.js';\n\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}\n\nexport { useInfiniteQuery };\n//# sourceMappingURL=useInfiniteQuery.esm.js.map\n","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\nimport {queryClient} from '@common/http/query-client';\nimport {Key} from 'react';\n\nexport const DriveQueryKeys = {\n  fetchEntries: (params?: DriveApiIndexParams) => {\n    const key: ('drive-entries' | DriveApiIndexParams)[] = ['drive-entries'];\n    if (params) key.push(params);\n    return key;\n  },\n  fetchUserFolders(params?: UserFoldersApiParams) {\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\n    const key: (string | object)[] = ['shareable-link'];\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchFolderPath(\n    hash?: string,\n    params?: Record<string, string | number | null>\n  ) {\n    const key: (string | any)[] = ['folder-path'];\n    if (hash) {\n      key.push(hash);\n    }\n    if (params) {\n      key.push(params);\n    }\n    return key;\n  },\n  fetchEntryShareableLink: (entryId: number) => {\n    return ['file-entries', entryId, 'shareable-link'];\n  },\n  fetchFileEntry: (id?: number) => {\n    const key: Key[] = ['drive/file-entries/model'];\n    if (id) key.push(id);\n    return key;\n  },\n  fetchStorageSummary: ['storage-summary'],\n};\n\nexport function invalidateEntryQueries() {\n  queryClient.invalidateQueries(DriveQueryKeys.fetchEntries());\n  queryClient.invalidateQueries(DriveQueryKeys.fetchFolderPath());\n  queryClient.invalidateQueries(DriveQueryKeys.fetchUserFolders());\n  // fetching model for single file entry in \"useFileEntry\"\n  queryClient.invalidateQueries(DriveQueryKeys.fetchFileEntry());\n}\n","import create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport {DriveSortDescriptor} from '../../drive-store';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@common/utils/hooks/local-storage';\n\ninterface LinkPageState {\n  password: string | null;\n  setPassword: (value: string) => void;\n  isPasswordProtected: boolean;\n  setIsPasswordProtected: (value: boolean) => void;\n  activeSort: DriveSortDescriptor;\n  setActiveSort: (value: DriveSortDescriptor) => void;\n  viewMode: 'grid' | 'list';\n  setViewMode: (mode: 'grid' | 'list') => void;\n}\n\nexport const useLinkPageStore = create<LinkPageState>()(\n  immer(set => ({\n    password: null,\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\n    activeSort: {\n      orderBy: 'updated_at',\n      orderDir: 'desc',\n    },\n    setPassword: value => {\n      set(state => {\n        state.password = value;\n      });\n    },\n    isPasswordProtected: false,\n    setIsPasswordProtected: value => {\n      set(state => {\n        state.isPasswordProtected = value;\n      });\n    },\n\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setActiveSort: value => {\n      set(state => {\n        state.activeSort = value;\n      });\n    },\n  }))\n);\n\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}\n","import {\n  QueryFunctionContext,\n  QueryKey,\n  useInfiniteQuery,\n} from '@tanstack/react-query';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport type {DriveEntry} from '../../files/drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {\n  linkPageState,\n  useLinkPageStore,\n} from '../shareable-link-page/link-page-store';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface FetchShareableLinkPageResponse extends FetchShareableLinkResponse {\n  folderChildren: LengthAwarePaginationResponse<DriveEntry>;\n}\n\ninterface FetchShareableLinkPageErrorResponse extends BackendErrorResponse {\n  passwordInvalid: boolean;\n}\n\ninterface FetchLinkByHashParams {\n  hash: string;\n  page?: number;\n  order?: string;\n  password?: string | null;\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password,\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\n  return apiClient\n    .get(`shareable-links/${hash}`, {\n      params: {withEntries: true, page, order, password},\n    })\n    .then(response => response.data);\n}\n\nexport function useShareableLinkPage() {\n  const {hash} = useParams();\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  const query = useInfiniteQuery(\n    DriveQueryKeys.fetchShareableLink({hash, sort: order}),\n    ({pageParam = 1}: QueryFunctionContext<QueryKey, number>) => {\n      return fetchLinkByHash({hash: hash!, page: pageParam, order, password});\n    },\n    {\n      getNextPageParam: lastResponse => {\n        if (!lastResponse.folderChildren) return undefined;\n        const currentPage = lastResponse.folderChildren.current_page;\n        const lastPage = lastResponse.folderChildren.last_page;\n        if (currentPage >= lastPage) {\n          return undefined;\n        }\n        return currentPage + 1;\n      },\n      // disable query if link is password protected and correct\n      // password was not entered yet, to prevent unnecessary requests\n      enabled: (!!hash && !isPasswordProtected) || password != null,\n      keepPreviousData: true,\n      retry: (retryCount, e: unknown) => {\n        if (isPasswordInvalidResponse(e)) {\n          return false;\n        } else {\n          return retryCount <= 2;\n        }\n      },\n      onError: (e: unknown) => {\n        if (isPasswordInvalidResponse(e)) {\n          return linkPageState().setIsPasswordProtected(true);\n        }\n      },\n    }\n  );\n\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\n  };\n}\n\nfunction isPasswordInvalidResponse(e: unknown) {\n  return (\n    axios.isAxiosError(e) &&\n    (e.response?.data as FetchShareableLinkPageErrorResponse)?.passwordInvalid\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {linkPageState} from '../link-page-store';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\n\ninterface Response extends BackendResponse {\n  matches: boolean;\n}\n\ninterface Props {\n  password: string;\n  linkHash: string;\n}\n\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkHash}/check-password`, {password})\n    .then(r => r.data);\n}\n\nexport function useCheckLinkPassword() {\n  return useMutation((props: Props) => checkLinkPassword(props), {\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../../files/drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {useLinkPageStore} from '../link-page-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Props {\n  password: string | null;\n  linkId: number;\n}\n\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\n  return apiClient\n    .post(`shareable-links/${linkId}/import`, {password})\n    .then(r => r.data);\n}\n\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation(\n    (props: Omit<Props, 'password'>) =>\n      importIntoOwnDrive({...props, password}),\n    {\n      onSuccess: () => {\n        toast(message('Item imported into your drive'));\n        queryClient.invalidateQueries(DriveQueryKeys.fetchShareableLink());\n      },\n      onError: err => showHttpErrorToast(err, message('Could not create link')),\n    }\n  );\n}\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {Trans} from '@common/i18n/trans';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\nimport {ImportExportIcon} from '@common/icons/material/ImportExport';\nimport React from 'react';\n\nexport function ShareableLinkPageActionButtons() {\n  const {link} = useShareableLinkPage();\n  const {user, isLoggedIn} = useAuth();\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\n\n  if (!link?.entry) return null;\n\n  return (\n    <div>\n      {link.allow_download && (\n        <Button\n          size=\"sm\"\n          variant=\"flat\"\n          color=\"chip\"\n          startIcon={<FileDownloadIcon />}\n          onClick={() => {\n            if (downloadUrl) {\n              downloadFileFromUrl(downloadUrl);\n            }\n          }}\n        >\n          <Trans message=\"Download\" />\n        </Button>\n      )}\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\n        <MenuTrigger\n          onItemSelected={key => {\n            if (key === 'import') {\n              importIntoOwnDrive.mutate({linkId: link.id});\n            } else if (key === 'download') {\n              if (downloadUrl) {\n                downloadFileFromUrl(downloadUrl);\n              }\n            }\n          }}\n        >\n          <IconButton\n            className=\"ml-6\"\n            size=\"sm\"\n            variant=\"flat\"\n            color=\"chip\"\n            radius=\"rounded\"\n            disabled={importIntoOwnDrive.isLoading}\n          >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\n\nexport function ShareableLinkNavbar() {\n  const {link} = useShareableLinkPage();\n  return (\n    <Navbar\n      size=\"md\"\n      color=\"bg\"\n      className=\"flex-shrink-0\"\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\n      menuPosition=\"shareable-link-page\"\n    >\n      {link?.entry && link.entry.type !== 'folder' && (\n        <div className=\"flex items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"font-medium whitespace-nowrap overflow-hidden overflow-ellipsis flex-auto\">\n            {link.entry.name}\n          </div>\n        </div>\n      )}\n    </Navbar>\n  );\n}\n","import {useState} from 'react';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {useCheckLinkPassword} from './queries/check-link-password';\nimport {Trans} from '@common/i18n/trans';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {useParams} from 'react-router-dom';\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\n\nexport function PasswordPage() {\n  const {trans} = useTrans();\n  const {hash} = useParams();\n  const fieldLabel = trans({message: 'Password'});\n  const [password, setPassword] = useState<string>('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n\n  return (\n    <div className=\"bg-alt w-full h-full flex flex-col\">\n      <ShareableLinkNavbar />\n      <div className=\"px-10 md:px-20 mx-auto my-80\">\n        <div className=\"flex flex-col md:flex-row gap-40 md:gap-14 bg items-center max-w-[560px] border rounded p-24\">\n          <div className=\"h-132\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              checkPassword.mutate({\n                linkHash: linkHash!,\n                password,\n              });\n            }}\n          >\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField\n              autoFocus\n              placeholder={fieldLabel}\n              aria-label={fieldLabel}\n              className=\"mt-10 mb-20\"\n              type=\"password\"\n              value={password}\n              required\n              errorMessage={\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\n              }\n              onChange={e => {\n                setPassword(e.target.value);\n              }}\n            />\n            <div className=\"text-right\">\n              <Button\n                variant=\"flat\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"w-full md:w-auto\"\n                disabled={checkPassword.isLoading}\n              >\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\n  entry: DriveEntry;\n  className?: string;\n  isSelected?: boolean;\n  isMobileMode?: boolean;\n  footerAdornment?: ReactNode;\n}\n\nexport const BaseFileGridItem = React.forwardRef<\n  HTMLDivElement,\n  BaseFileGridItemProps\n>(\n  (\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\n    ref\n  ) => {\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        className={clsx(\n          'shadow rounded border aspect-square flex flex-col grid-item transition-shadow-opacity select-none overflow-hidden outline-none dark:bg-alt',\n          isSelected && 'border-primary',\n          className\n        )}\n      >\n        <div className=\"flex-auto relative min-h-0\">\n          <FileThumbnail\n            className=\"h-full\"\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\n            file={entry}\n          />\n        </div>\n        <Footer\n          entry={entry}\n          isSelected={isSelected}\n          isMobile={isMobileMode}\n          adornment={footerAdornment}\n        />\n      </div>\n    );\n  }\n);\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n  isMobile?: boolean;\n  adornment?: ReactNode;\n}\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\n  return (\n    <div\n      className={clsx(\n        'text-sm h-48 flex-shrink-0 flex items-center',\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\n        isSelected && 'bg-primary-light/20'\n      )}\n    >\n      <div className=\"min-w-0 whitespace-nowrap overflow-hidden overflow-ellipsis\">\n        {entry.name}\n      </div>\n      {adornment}\n    </div>\n  );\n}\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../../files/drive-entry';\n\nexport interface FolderPreviewGridProps {\n  entries: DriveEntry[];\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\n}\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  return (\n    <div className=\"file-grid\">\n      {entries.map((entry, index) => (\n        <BaseFileGridItem\n          tabIndex={-1}\n          className=\"hover:shadow-md cursor-pointer bg\"\n          entry={entry}\n          key={entry.id}\n          onContextMenu={e => {\n            e.preventDefault();\n          }}\n          onKeyDown={e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              onEntrySelected(entry, index);\n            }\n          }}\n          onClick={() => {\n            onEntrySelected(entry, index);\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {Trans} from '@common/i18n/trans';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport React from 'react';\nimport memoize from 'nano-memoize';\n\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\n\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    header: () => <Trans message=\"Name\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-14\">\n        <div>\n          <FileThumbnail\n            className=\"w-24 h-24 rounded\"\n            iconClassName=\"w-24 h-24\"\n            file={entry}\n          />\n        </div>\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\n      </div>\n    ),\n    width: 'w-5/6 max-w-1',\n  },\n  {\n    key: 'updated_at',\n    allowsSorting: true,\n    header: () => <Trans message=\"Last modified\" />,\n    body: user => <FormattedDate date={user.updated_at} />,\n  },\n  {\n    key: 'file_size',\n    allowsSorting: true,\n    header: () => <Trans message=\"Size\" />,\n    body: entry => formatFileSize(entry.file_size) ?? '-',\n  },\n];\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {DriveSortDescriptor} from '../../../drive-store';\nimport React from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport type {FolderPreviewGridProps} from './folder-preview-file-grid';\nimport {fileTableColumns} from '../../../file-view/file-table/file-table-columns';\n\nconst mobileColumns = fileTableColumns.filter(\n  config => config.key !== 'updated_at'\n);\n\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected,\n}: FolderPreviewGridProps) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n\n  return (\n    <Table\n      columns={isMobile ? mobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\n      }}\n      onAction={(item, index) => {\n        onEntrySelected(item, index);\n      }}\n      enableSelection={false}\n    />\n  );\n}\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {useNavigate} from 'react-router-dom';\nimport {ShareableLink} from '../../shareable-link';\n\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\n\nexport function useNavigateToSubfolder() {\n  const {link} = useShareableLinkPage();\n  const navigate = useNavigate();\n  return (hash: string) => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport {DriveEntry} from '../../../files/drive-entry';\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\nimport {useLinkPageStore} from '../link-page-store';\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\nimport {useLocation} from 'react-router-dom';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\ninterface FolderPreviewChildrenProps {\n  className?: string;\n}\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\n  const {pathname} = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef<HTMLDivElement>(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPreviousData,\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n\n  if (!link || isPreviousData) {\n    return (\n      <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>\n    );\n  }\n\n  const handlePreview = (entry: DriveEntry, index: number) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n\n  const folderEntries = entries || [];\n\n  return (\n    <Fragment>\n      <AdHost slot=\"file-preview\" className=\"mb-40\" />\n      <div\n        className={clsx(\n          'px-14 pb-14 md:px-24 md:pb-24 flex-auto overflow-auto file-grid-container',\n          className\n        )}\n      >\n        {viewMode === 'grid' ? (\n          <FolderPreviewFileGrid\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        ) : (\n          <FolderPreviewFileTable\n            entries={folderEntries}\n            onEntrySelected={handlePreview}\n          />\n        )}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && (\n            <m.div\n              className=\"flex justify-center mt-24 w-full\"\n              {...opacityAnimation}\n            >\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger\n        type=\"modal\"\n        isOpen={activePreviewIndex != undefined}\n        onClose={() => setActivePreviewIndex(undefined)}\n      >\n        <FilePreviewDialog\n          entries={folderEntries}\n          defaultActiveIndex={activePreviewIndex}\n          allowDownload={link.allow_download}\n        />\n      </DialogTrigger>\n    </Fragment>\n  );\n}\n","import {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface DashboardContentHeaderProps {\n  children: ReactNode;\n  className?: string;\n}\nexport function DashboardContentHeader({\n  children,\n  className,\n}: DashboardContentHeaderProps) {\n  return (\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\n\ninterface FolderPathResponse extends BackendResponse {\n  path: DriveFolder[];\n}\n\ntype Params = Record<string, string | number | null>;\n\ninterface Props {\n  hash?: string;\n  params?: Params;\n  isEnabled?: boolean;\n}\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\n  return useQuery(\n    DriveQueryKeys.fetchFolderPath(hash!, params),\n    () => fetchFolderPath(hash!, params),\n    {enabled: !!hash && isEnabled}\n  );\n}\n\nfunction fetchFolderPath(\n  hash: string,\n  params?: Params\n): Promise<FolderPathResponse> {\n  return apiClient\n    .get(`folders/${hash}/path`, {params})\n    .then(response => response.data);\n}\n","import React, {ReactElement, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport {DriveFolder} from '../../../files/drive-entry';\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {ShareableLink} from '../../shareable-link';\nimport {useLinkPageStore} from '../link-page-store';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\n\ninterface Props {\n  className?: string;\n  folder?: DriveFolder;\n  link: ShareableLink;\n}\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password,\n    },\n  });\n\n  let content: ReactNode;\n\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                navigateToSubfolder(item.folder.hash);\n              }}\n              key={item.folder.hash}\n            >\n              {item.label}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}\n","import {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\n  {id: 'file_size', label: message('Size')},\n  {id: 'name', label: message('Name')},\n  {id: 'updated_at', label: message('Last modified')},\n  {id: 'created_at', label: message('Upload date')},\n  {id: 'type', label: message('Type')},\n  {id: 'extension', label: message('Extension')},\n];\n\nexport interface DriveSortOption {\n  id: SortColumn;\n  label: MessageDescriptor;\n}\n\nexport type SortColumn =\n  | 'file_size'\n  | 'name'\n  | 'updated_at'\n  | 'created_at'\n  | 'type'\n  | 'extension';\n\nexport type SortDirection = 'desc' | 'asc';\n\nexport interface SortValue {\n  column: SortColumn;\n  direction: SortDirection;\n}\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\nimport {Button} from '@common/ui/buttons/button';\nimport {SortIcon} from '@common/icons/material/Sort';\nimport {\n  Menu,\n  MenuItem,\n  MenuSection,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport type {DriveSortDescriptor} from '../../drive-store';\n\ninterface Props {\n  descriptor: DriveSortDescriptor;\n  onChange: (value: DriveSortDescriptor) => void;\n  isDisabled?: boolean;\n}\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false,\n}: Props) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n\n  return (\n    <MenuTrigger\n      showCheckmark\n      selectionMode=\"multiple\"\n      selectedValue={[direction || 'desc', column || '']}\n      onItemSelected={key => {\n        if (key === 'asc' || key === 'desc') {\n          onChange({\n            orderBy: column,\n            orderDir: key,\n          });\n        } else {\n          onChange({\n            orderBy: key as SortColumn,\n            orderDir: direction,\n          });\n        }\n      }}\n    >\n      <Button\n        className=\"text-muted\"\n        variant=\"text\"\n        size=\"sm\"\n        startIcon={<SortIcon />}\n        disabled={isDisabled}\n      >\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => (\n            <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>\n          ))}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import React from 'react';\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {GridViewIcon} from '@common/icons/material/GridView';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {DriveFolder} from '../../../files/drive-entry';\n\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {link, isFetching} = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n\n  return (\n    <div className=\"md:flex-row flex flex-col md:items-center gap-14 justify-between p-14 md:p-24 md:h-90\">\n      {hasEntry && (\n        <FolderPreviewBreadcrumb\n          link={link}\n          folder={link.entry as DriveFolder}\n          className=\"flex-auto\"\n        />\n      )}\n      {hasEntry && (\n        <div className=\"flex items-center justify-between md:justify-start text-muted\">\n          <EntriesSortButton\n            isDisabled={isFetching}\n            descriptor={activeSort}\n            onChange={value => {\n              linkPageState().setActiveSort(value);\n            }}\n          />\n          <div className=\"md:border-l md:pl-10 ml-10\">\n            <IconButton\n              onClick={() => {\n                linkPageState().setViewMode(\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid'\n                );\n              }}\n            >\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__70babf29__\"","import React from 'react';\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FolderPreviewFileView} from './folder-preview-file-view';\nimport {Trans} from '@common/i18n/trans';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\nimport {FolderPreviewHeader} from './folder-preview-header';\nimport shareSvg from './share.svg';\nimport clsx from 'clsx';\n\nexport function FolderPreview() {\n  const {entries, isFetched} = useShareableLinkPage();\n  const showEmptyMessage = isFetched && !entries?.length;\n\n  return (\n    <DashboardLayout name=\"folder-preview\">\n      <DashboardNavbar\n        hideToggleButton\n        rightChildren={<ShareableLinkPageActionButtons />}\n        color=\"bg\"\n      />\n      <DashboardContentHeader>\n        <FolderPreviewHeader />\n      </DashboardContentHeader>\n      <FileUploadProvider>\n        <DashboardContent>\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\n        </DashboardContent>\n      </FileUploadProvider>\n    </DashboardLayout>\n  );\n}\n\ninterface EmptyMessageProps {\n  className?: string;\n}\nfunction EmptyMessage({className}: EmptyMessageProps) {\n  return (\n    <IllustratedMessage\n      className={clsx(className, 'mt-80')}\n      image={<SvgImage src={shareSvg} />}\n      title={<Trans message=\"Folder is empty\" />}\n      description={\n        <Trans message=\"No files have been uploaded to this folder yet\" />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport {FilePreviewContainer} from '@common/uploads/preview/file-preview-container';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\nimport {AdHost} from '@common/admin/ads/ad-host';\n\nexport function ShareableLinkPageFilePreview() {\n  const {link} = useShareableLinkPage();\n\n  if (!link?.entry) return null;\n\n  return (\n    <div className=\"flex flex-col w-full h-full bg-alt\">\n      <ShareableLinkNavbar />\n      <AdHost slot=\"file-preview\" className=\"mt-24\" />\n      <FilePreviewContainer\n        entries={[link.entry]}\n        showHeader={false}\n        allowDownload={link.allow_download}\n      />\n    </div>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\nimport {useLinkPageStore} from './link-page-store';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {PasswordPage} from './password-page';\nimport {FolderPreview} from './folder-preview/folder-preview';\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\n\nexport function ShareableLinkPage() {\n  const {status, link} = useShareableLinkPage();\n  const {trans} = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n\n  let content: ReactElement;\n\n  if (status === 'loading') {\n    content = (\n      <div className=\"flex-auto flex items-center justify-center w-full h-full\">\n        <ProgressCircle\n          aria-label={trans({message: 'Loading link'})}\n          isIndeterminate\n        />\n      </div>\n    );\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else {\n    content = <ShareableLinkPageFilePreview />;\n  }\n\n  return (\n    <FileEntryUrlsContext.Provider value={{shareable_link: link?.id, password}}>\n      {content}\n    </FileEntryUrlsContext.Provider>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {DriveQueryKeys} from '../../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchStorageSummaryResponse extends BackendResponse {\n  used: number;\n  available: number;\n}\n\nexport function useStorageSummary() {\n  return useQuery(DriveQueryKeys.fetchStorageSummary, fetchStorageSummary, {\n    select: formatResponse,\n  });\n}\n\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\n  return apiClient.get(`user/space-usage`).then(response => response.data);\n}\n\nfunction formatResponse(response: FetchStorageSummaryResponse) {\n  // null means that user has unlimited space available\n  const percentage =\n    response.available === null\n      ? 0\n      : (response.used * 100) / response.available;\n\n  return {\n    usedFormatted: prettyBytes(response.used),\n    availableFormatted: prettyBytes(response.available),\n    percentage,\n    used: response.used,\n    available: response.available,\n  };\n}\n","import React from 'react';\nimport {ProgressBarBase, ProgressBarBaseProps} from './progress-bar-base';\n\nexport function Meter(props: ProgressBarBaseProps) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}\n","import React from 'react';\nimport {useStorageSummary} from './storage-summary';\nimport {StorageIcon} from '@common/icons/material/Storage';\nimport {Meter} from '@common/ui/progress/meter';\nimport {Trans} from '@common/i18n/trans';\nimport clsx from 'clsx';\n\nexport function StorageMeter() {\n  const {isLoading, data} = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = (\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans\n        message=\":used of :available used\"\n        values={{\n          used: data?.usedFormatted,\n          available: data?.availableFormatted,\n        }}\n      />\n    </span>\n  );\n  return (\n    <div className=\"pl-24 pt-24 mt-24 border-t flex items-start gap-16\">\n      <StorageIcon className=\"icon-md -mt-4\" />\n      <Meter\n        className=\"flex-auto max-w-144\"\n        size=\"xs\"\n        value={data?.percentage}\n        label={label}\n        showValueLabel={false}\n        labelPosition=\"bottom\"\n      />\n    </div>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\n  return useMutation((props: Props) => createWorkspace(props), {\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n    },\n    onError: r => onFormQueryError(r, form),\n  });\n}\n\nfunction createWorkspace(props: Props): Promise<Response> {\n  return apiClient.post('workspace', props).then(r => r.data);\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {useCreateWorkspace} from './requests/create-workspace';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\n\nexport function NewWorkspaceDialog() {\n  const form = useForm<{name: string}>();\n  const {formId, close} = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            createWorkspace.mutate(form.getValues(), {\n              onSuccess: response => {\n                close(response.workspace.id);\n              },\n            });\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Workspace name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={createWorkspace.isLoading}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient} from '../../http/query-client';\n\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\n  workspace: Workspace;\n}\n\nfunction fetchWorkspaceWithMembers(\n  workspaceId: number\n): Promise<FetchWorkspaceWithMembersResponse> {\n  return apiClient\n    .get(`workspace/${workspaceId}`)\n    .then(response => response.data);\n}\n\nexport function useWorkspaceWithMembers(workspaceId: number) {\n  return useQuery(WorkspaceQueryKeys.workspaceWithMembers(workspaceId), () =>\n    fetchWorkspaceWithMembers(workspaceId)\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invites: WorkspaceInvite[];\n}\n\ninterface Props {\n  workspaceId: number;\n  emails: string[];\n  roleId: number;\n}\n\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/invite`, other)\n    .then(r => r.data);\n}\n\nexport function useInviteMembers() {\n  return useMutation((props: Props) => InviteMembers(props), {\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient} from '../../http/query-client';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  invite: WorkspaceInvite;\n}\n\ninterface Props {\n  workspaceId: number;\n  inviteId: string;\n}\n\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}: Props): Promise<Response> {\n  return apiClient\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\n    .then(r => r.data);\n}\n\nexport function useResendInvite() {\n  return useMutation((props: Props) => ResendInvite(props), {\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","const matcher =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(string?: string): boolean {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {WorkspaceMember} from '../types/workspace-member';\nimport {WorkspaceInvite} from '../types/workspace-invite';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  member: WorkspaceMember | WorkspaceInvite;\n  roleId: number;\n}\n\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\n  const modelType = member.model_type;\n  const memberId =\n    member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient\n    .post(\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\n      other\n    )\n    .then(r => r.data);\n}\n\nexport function useChangeRole() {\n  return useMutation((props: Props) => ChangeRole(props), {\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useAuth} from '../../auth/use-auth';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Props {\n  workspaceId: number;\n  memberId: number | string;\n  memberType: 'invite' | 'member';\n}\n\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType,\n}: Props): Promise<Response> {\n  const endpoint =\n    memberType === 'invite'\n      ? `workspace/invite/${memberId}`\n      : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\n\nexport function useRemoveMember() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const {user} = useAuth();\n  return useMutation((props: Props) => removeMember(props), {\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n      queryClient.invalidateQueries(\n        WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      );\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err),\n  });\n}\n","import {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '../i18n/trans';\n\nexport function LeaveWorkspaceConfirmation() {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Leave workspace\" />}\n      body={\n        <div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"font-semibold mt-8\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Leave\" />}\n    />\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\nimport {ProgressCircle} from '../ui/progress/progress-circle';\nimport {Workspace} from './types/workspace';\nimport {GroupIcon} from '../icons/material/Group';\nimport {WorkspaceMember} from './types/workspace-member';\nimport {useAuth} from '../auth/use-auth';\nimport {\n  ChipField,\n  ChipValue,\n} from '../ui/forms/input-field/chip-field/chip-field';\nimport {useValueLists} from '../http/value-lists';\nimport {Button} from '../ui/buttons/button';\nimport {ArrowDropDownIcon} from '../icons/material/ArrowDropDown';\nimport {useInviteMembers} from './requests/invite-members';\nimport {WorkspaceInvite} from './types/workspace-invite';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useResendInvite} from './requests/resend-invite';\nimport {isEmail} from '../utils/string/is-email';\nimport {ButtonSize} from '../ui/buttons/button-size';\nimport {useChangeRole} from './requests/change-role';\nimport {IconButton} from '../ui/buttons/icon-button';\nimport {useRemoveMember} from './requests/remove-member';\nimport {CloseIcon} from '../icons/material/Close';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {toast} from '../ui/toast/toast';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Trans} from '../i18n/trans';\nimport {useTrans} from '../i18n/use-trans';\nimport {message} from '../i18n/message';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ninterface WorkspaceMembersDialogProps {\n  workspace: Workspace;\n}\nexport function WorkspaceMembersDialog({\n  workspace,\n}: WorkspaceMembersDialogProps) {\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? (\n          <div className=\"flex items-center justify-center min-h-[238px]\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div>\n        ) : (\n          <Manager workspace={data!.workspace} />\n        )}\n      </DialogBody>\n    </Dialog>\n  );\n}\n\ninterface ManagerProps {\n  workspace: Workspace;\n}\nfunction Manager({workspace}: ManagerProps) {\n  const can = usePermissions(workspace);\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\n    ...(workspace.members || []),\n    ...(workspace.invites || []),\n  ];\n\n  return (\n    <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"flex items-center gap-10 mb-14 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans\n          message=\"Members of `:workspace`\"\n          values={{workspace: workspace.name}}\n        />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => (\n          <MemberListItem\n            key={`${member.model_type}.${member.id}`}\n            workspace={workspace}\n            member={member}\n          />\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-start text-sm gap-14 mb-20\"\n      key={`${member.model_type}.${member.id}`}\n    >\n      <img\n        className=\"w-36 h-36 rounded flex-shrink-0\"\n        src={member.avatar}\n        alt=\"\"\n      />\n      <div className=\"md:flex flex-auto items-center justify-between gap-14 min-w-0\">\n        <div className=\"overflow-hidden mb-10 md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.display_name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>\n  );\n}\n\nfunction usePermissions(workspace: Workspace) {\n  const {user: authUser} = useAuth();\n  const response = {update: false, invite: false, delete: false};\n  const permissions = ['update', 'invite', 'delete'] as const;\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] =\n        authMember.is_owner ||\n        !!authMember.permissions?.find(\n          p => p.name === `workspace_members.${permission}`\n        );\n    });\n  }\n\n  return response;\n}\n\ninterface MemberActionsProps {\n  workspace: Workspace;\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction MemberActions({workspace, member}: MemberActionsProps) {\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\n  const changeRole = useChangeRole();\n  const {user} = useAuth();\n\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser =\n    member.model_type === 'member' && user?.id === member.id;\n\n  const roleSelector =\n    !can.update || isOwner || isCurrentUser ? (\n      <div className=\"text-muted ml-auto first:capitalize\">\n        <Trans message={member.role_name} />\n      </div>\n    ) : (\n      <RoleMenuTrigger\n        className=\"ml-auto flex-shrink-0\"\n        size=\"xs\"\n        value={selectedRole}\n        isDisabled={changeRole.isLoading}\n        onChange={roleId => {\n          setSelectedRole(roleId);\n          changeRole.mutate({\n            roleId,\n            workspaceId: workspace.id,\n            member,\n          });\n        }}\n      />\n    );\n\n  return (\n    <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && (\n        <RemoveMemberButton\n          type={isCurrentUser ? 'leave' : 'remove'}\n          member={member}\n          workspace={workspace}\n        />\n      )}\n    </>\n  );\n}\n\ninterface InviteChipFieldProps {\n  workspace: Workspace;\n}\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\n  const {trans} = useTrans();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState<number>();\n  const inviteMembers = useInviteMembers();\n  const {data} = useValueLists(['workspaceRoles']);\n\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n\n  return (\n    <div className=\"mb-30\">\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      />\n      <div className=\"flex items-center gap-14 justify-between mt-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={inviteMembers.isLoading || !allEmailsValid}\n            onClick={() => {\n              inviteMembers.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  roleId: selectedRole,\n                  workspaceId: workspace.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                }\n              );\n            }}\n          >\n            <Trans message=\"Invite\" />\n          </Button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\ninterface RemoveMemberButtonProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n  type: 'leave' | 'remove';\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type,\n}: RemoveMemberButtonProps) {\n  const removeMember = useRemoveMember();\n  const {close} = useDialogContext();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          removeMember.mutate({\n            workspaceId: workspace.id,\n            memberId: member.id,\n            memberType: member.model_type,\n          });\n          if (type === 'leave') {\n            close();\n            toast(message('Left workspace'));\n          }\n        }\n      }}\n    >\n      <IconButton\n        size=\"md\"\n        className=\"text-muted flex-shrink-0\"\n        disabled={removeMember.isLoading}\n      >\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? (\n        <LeaveWorkspaceConfirmation />\n      ) : (\n        <RemoveMemberConfirmation member={member} />\n      )}\n    </DialogTrigger>\n  );\n}\n\ninterface RemoveMemberConfirmationProps {\n  member: WorkspaceMember | WorkspaceInvite;\n}\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Remove member\" />}\n      body={\n        <div>\n          <Trans\n            message=\"Are you sure you want to remove `:name`?\"\n            values={{name: member.display_name}}\n          />\n          <div className=\"font-semibold mt-8\">\n            <Trans\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\n              values={{\n                name: member.display_name,\n              }}\n            />\n          </div>\n        </div>\n      }\n      confirm={<Trans message=\"Remove\" />}\n    />\n  );\n}\n\ninterface RoleMenuTriggerProps {\n  onChange: (value: number) => void;\n  value?: number;\n  size?: ButtonSize;\n  className?: string;\n  isDisabled?: boolean;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled,\n}: RoleMenuTriggerProps) {\n  const {data} = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n\n  return (\n    <MenuTrigger\n      selectionMode=\"single\"\n      selectedValue={value}\n      onSelectionChange={newValue => {\n        onChange(newValue as number);\n      }}\n    >\n      <Button\n        className={className}\n        size={size}\n        variant=\"flat\"\n        color=\"chip\"\n        disabled={isDisabled}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => (\n          <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>\n        ))}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\ninterface MemberDisplayNameAppendProps {\n  member: WorkspaceMember | WorkspaceInvite;\n  workspace: Workspace;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const {user} = useAuth();\n  const can = usePermissions(workspace);\n\n  if (user?.id === member.id) {\n    return (\n      <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>\n    );\n  }\n  if (member.model_type === 'invite') {\n    return (\n      <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? (\n          <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </>\n        ) : null}\n      </div>\n    );\n  }\n  return null;\n}\n\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace,\n}: MemberDisplayNameAppendProps) {\n  const resendInvite = useResendInvite();\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      onClose={isConfirmed => {\n        if (isConfirmed) {\n          resendInvite.mutate({\n            workspaceId: workspace.id,\n            inviteId: member.id as string,\n          });\n        }\n      }}\n    >\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        color=\"primary\"\n        disabled={resendInvite.isLoading}\n      >\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog\n        title={<Trans message=\"Resend invite\" />}\n        body={\n          <Trans message=\"Are you sure you want to send this invite again?\" />\n        }\n        confirm={<Trans message=\"Send\" />}\n      />\n    </DialogTrigger>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {Workspace} from '../types/workspace';\nimport {onFormQueryError} from '../../errors/on-form-query-error';\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\nimport {message} from '../../i18n/message';\n\ninterface Response extends BackendResponse {\n  workspace: Workspace;\n}\n\nexport interface UpdateWorkspacePayload {\n  id: number;\n  name: string;\n}\n\nfunction updateWorkspace({\n  id,\n  ...props\n}: UpdateWorkspacePayload): Promise<Response> {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\n\nexport function useUpdateWorkspace(\n  form: UseFormReturn<UpdateWorkspacePayload>\n) {\n  const {close} = useDialogContext();\n  return useMutation(\n    (props: UpdateWorkspacePayload) => updateWorkspace(props),\n    {\n      onSuccess: response => {\n        close();\n        toast(message('Updated workspace'));\n        queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n        queryClient.invalidateQueries(\n          WorkspaceQueryKeys.workspaceWithMembers(response.workspace.id)\n        );\n      },\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\nimport {Form} from '../ui/forms/form';\nimport {Button} from '../ui/buttons/button';\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {\n  UpdateWorkspacePayload,\n  useUpdateWorkspace,\n} from './requests/update-workspace';\nimport {Workspace} from './types/workspace';\nimport {Trans} from '../i18n/trans';\n\ninterface Props {\n  workspace: Workspace;\n}\nexport function RenameWorkspaceDialog({workspace}: Props) {\n  const form = useForm<UpdateWorkspacePayload>({\n    defaultValues: {id: workspace.id, name: workspace.name},\n  });\n  const {formId, close} = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form\n          form={form}\n          id={formId}\n          onSubmit={() => {\n            updateWorkspace.mutate(form.getValues());\n          }}\n        >\n          <FormTextField\n            name=\"name\"\n            autoFocus\n            label={<Trans message=\"Name\" />}\n            minLength={3}\n            required\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          variant=\"flat\"\n          color=\"primary\"\n          type=\"submit\"\n          form={formId}\n          disabled={updateWorkspace.isLoading}\n        >\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '../../http/backend-response/backend-response';\nimport {toast} from '../../ui/toast/toast';\nimport {apiClient, queryClient} from '../../http/query-client';\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\nimport {PersonalWorkspace} from '../user-workspaces';\nimport {message} from '../../i18n/message';\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\nexport interface DeleteWorkspacePayload {\n  id: number;\n}\n\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\n\nexport function useDeleteWorkspace() {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  return useMutation(\n    (props: DeleteWorkspacePayload) => deleteWorkspace(props),\n    {\n      onSuccess: (r, payload) => {\n        toast(message('Deleted workspace'));\n        queryClient.invalidateQueries(WorkspaceQueryKeys.fetchUserWorkspaces);\n        queryClient.invalidateQueries(\n          WorkspaceQueryKeys.workspaceWithMembers(payload.id)\n        );\n\n        // if user deleted workspace that is currently active, switch to personal workspace\n        if (workspaceId === payload.id) {\n          setWorkspaceId(PersonalWorkspace.id);\n        }\n      },\n      onError: err => showHttpErrorToast(err),\n    }\n  );\n}\n","import clsx from 'clsx';\nimport {cloneElement, Fragment, ReactElement, useEffect, useState} from 'react';\nimport {ButtonBase} from '../ui/buttons/button-base';\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\nimport {UnfoldMoreIcon} from '../icons/material/UnfoldMore';\nimport {AddIcon} from '../icons/material/Add';\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\nimport {useActiveWorkspaceId} from './active-workspace-id-context';\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\nimport {Workspace} from './types/workspace';\nimport {Dialog} from '../ui/overlays/dialog/dialog';\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\nimport {Button, ButtonProps} from '../ui/buttons/button';\nimport {CheckIcon} from '../icons/material/Check';\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\nimport {KeyboardArrowDownIcon} from '../icons/material/KeyboardArrowDown';\nimport {PersonAddIcon} from '../icons/material/PersonAdd';\nimport {DeleteIcon} from '../icons/material/Delete';\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\nimport {EditIcon} from '../icons/material/Edit';\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\nimport {useDeleteWorkspace} from './requests/delete-workspace';\nimport {useRemoveMember} from './requests/remove-member';\nimport {useAuth} from '../auth/use-auth';\nimport {Trans} from '../i18n/trans';\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\n\ntype ActiveDialogName =\n  | 'workspaceMembers'\n  | 'updateWorkspace'\n  | 'deleteWorkspace'\n  | 'leaveWorkspace';\ntype ActiveDialog =\n  | {name: ActiveDialogName; workspace: Workspace}\n  | {name: 'newWorkspace'}\n  | null;\n\ninterface WorkspaceSelectorProps {\n  className?: string;\n  onChange?: (id: number) => void;\n  trigger?: ReactElement<ButtonProps>;\n}\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger: propsTrigger,\n}: WorkspaceSelectorProps) {\n  const {data, isFetched, isFetching} = useUserWorkspaces();\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const activeWorkspace = data?.find(w => w.id === workspaceId);\n  const [dialog, setDialog] = useState<ActiveDialog>(null);\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {hasPermission} = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, data, setWorkspaceId, isFetched, isFetching]);\n\n  if (!activeWorkspace || !hasPermission('workspaces.create')) return null;\n\n  const defaultTrigger = (\n    <ButtonBase\n      className={clsx(\n        'flex items-center gap-10 hover:bg-hover rounded ring-inset focus-visible:ring-2',\n        className\n      )}\n    >\n      <span className=\"block flex-auto mr-auto text-left overflow-hidden\">\n        <span className=\"block text-sm text-main font-medium overflow-hidden overflow-ellipsis\">\n          {activeWorkspace.default ? (\n            <Trans message={activeWorkspace.name} />\n          ) : (\n            activeWorkspace.name\n          )}\n        </span>\n        <span className=\"block text-muted text-xs\">\n          {activeWorkspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: activeWorkspace.members_count}}\n            />\n          )}\n        </span>\n      </span>\n      <UnfoldMoreIcon className=\"icon-md shrink-0\" />\n    </ButtonBase>\n  );\n\n  const trigger = propsTrigger || defaultTrigger;\n\n  return (\n    <Fragment>\n      <DialogTrigger\n        type=\"popover\"\n        isOpen={selectorIsOpen}\n        onClose={() => {\n          setSelectorIsOpen(false);\n        }}\n      >\n        {cloneElement(trigger, {\n          onClick: () => setSelectorIsOpen(!selectorIsOpen),\n        })}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 pb-10 border-b\">\n              {data!.map(workspace => (\n                <WorkspaceItem\n                  key={workspace.id}\n                  workspace={workspace}\n                  setDialog={setDialog}\n                  setSelectorIsOpen={setSelectorIsOpen}\n                  onChange={onChange}\n                />\n              ))}\n            </div>\n            <div className=\"text-center mb-4 px-4\">\n              <Button\n                onClick={e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setDialog({name: 'newWorkspace'});\n                  setSelectorIsOpen(false);\n                }}\n                variant=\"outline\"\n                startIcon={<AddIcon />}\n                color=\"primary\"\n                className=\"w-full h-40\"\n              >\n                <Trans message=\"Create new workspace\" />\n              </Button>\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n      <DialogContainer\n        dialog={dialog}\n        setDialog={setDialog}\n        onChange={onChange}\n      />\n    </Fragment>\n  );\n}\n\ninterface WorkspaceItemProps {\n  workspace: Workspace;\n  onChange: WorkspaceSelectorProps['onChange'];\n  setSelectorIsOpen: (value: boolean) => void;\n  setDialog: (value: ActiveDialog) => void;\n}\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen,\n  setDialog,\n}: WorkspaceItemProps) {\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n\n  return (\n    <div\n      onClick={() => {\n        setWorkspaceId(workspace.id);\n        onChange?.(workspace.id);\n        setSelectorIsOpen(false);\n      }}\n      className={clsx(\n        'p-10 mb-4 text-left flex items-center gap-12 rounded-lg cursor-pointer',\n        isActive && 'bg-primary/5',\n        !isActive && 'hover:bg-hover'\n      )}\n    >\n      <CheckIcon\n        size=\"sm\"\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\n      />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-muted text-sm\">\n          {workspace.default ? (\n            <Trans message=\"Personal workspace\" />\n          ) : (\n            <Trans\n              message=\":count members\"\n              values={{count: workspace.members_count}}\n            />\n          )}\n        </div>\n      </div>\n      {workspace.id !== 0 && (\n        <ManageButton\n          setSelectorIsOpen={setSelectorIsOpen}\n          workspace={workspace}\n          setDialog={setDialog}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface DialogContainerProps {\n  dialog: ActiveDialog;\n  setDialog: (value: ActiveDialog) => void;\n  onChange?: WorkspaceSelectorProps['onChange'];\n}\nfunction DialogContainer({dialog, setDialog, onChange}: DialogContainerProps) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const removeMember = useRemoveMember();\n  const {user} = useAuth();\n  const {setWorkspaceId} = useActiveWorkspaceId();\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog?.name}\n      onClose={value => {\n        if (dialog?.name === 'deleteWorkspace' && value) {\n          deleteWorkspace.mutate({id: dialog.workspace.id});\n        }\n        if (dialog?.name === 'leaveWorkspace' && value && user?.id) {\n          removeMember.mutate({\n            workspaceId: dialog.workspace.id,\n            memberId: user.id,\n            memberType: 'member',\n          });\n        }\n        if (dialog?.name === 'newWorkspace' && value) {\n          setWorkspaceId(value);\n          onChange?.(value);\n        }\n        setDialog(null);\n      }}\n    >\n      {dialog?.name === 'newWorkspace' && <NewWorkspaceDialog />}\n      {dialog?.name === 'updateWorkspace' && (\n        <RenameWorkspaceDialog workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'workspaceMembers' && (\n        <WorkspaceMembersDialog workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'deleteWorkspace' && (\n        <DeleteWorkspaceConfirmation workspace={dialog.workspace} />\n      )}\n      {dialog?.name === 'leaveWorkspace' && <LeaveWorkspaceConfirmation />}\n    </DialogTrigger>\n  );\n}\n\ninterface DeleteWorkspaceConfirmationProps {\n  workspace: Workspace;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n}: DeleteWorkspaceConfirmationProps) {\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete workspace\" />}\n      body={\n        <Trans\n          message=\"Are you sure you want to delete “:name“?\"\n          values={{name: workspace.name}}\n        />\n      }\n      confirm={<Trans message=\"Delete\" />}\n    />\n  );\n}\n\ninterface ManageButtonProps {\n  setSelectorIsOpen: (value: boolean) => void;\n  setDialog: (dialog: ActiveDialog) => void;\n  workspace: Workspace;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  setDialog,\n  workspace,\n}: ManageButtonProps) {\n  const {user} = useAuth();\n\n  return (\n    <MenuTrigger\n      onItemSelected={value => {\n        setSelectorIsOpen(false);\n        setDialog({name: value as ActiveDialogName, workspace});\n      }}\n    >\n      <Button\n        onClick={e => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        color=\"primary\"\n        size=\"xs\"\n        variant=\"outline\"\n        endIcon={<KeyboardArrowDownIcon />}\n      >\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem\n          onClick={e => e.stopPropagation()}\n          value=\"workspaceMembers\"\n          startIcon={<PersonAddIcon />}\n        >\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"updateWorkspace\"\n            startIcon={<EditIcon />}\n          >\n            <Trans message=\"Rename\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id !== user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"leaveWorkspace\"\n            startIcon={<ExitToAppIcon />}\n          >\n            <Trans message=\"Leave\" />\n          </MenuItem>\n        )}\n        {workspace.owner_id === user?.id && (\n          <MenuItem\n            onClick={e => e.stopPropagation()}\n            value=\"deleteWorkspace\"\n            startIcon={<DeleteIcon />}\n          >\n            <Trans message=\"Delete\" />\n          </MenuItem>\n        )}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","export default \"__VITE_ASSET__107c40dd__\"","export default \"__VITE_ASSET__5219b76e__\"","export default \"__VITE_ASSET__49556098__\"","export default \"__VITE_ASSET__389510cc__\"","export default \"__VITE_ASSET__585c130e__\"","import type {DriveFolder} from '../files/drive-entry';\nimport {message} from '@common/i18n/message';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport {DriveSortDescriptor} from '../drive-store';\nimport {BootstrapData} from '@common/core/bootstrap-data/bootstrap-data';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\ninterface NoContentMessage {\n  title: MessageDescriptor;\n  description: MessageDescriptor;\n  image: string;\n}\n\nexport interface DrivePage {\n  id: string;\n  label: MessageDescriptor | string;\n  path: string;\n  hasActions?: boolean;\n  canUpload?: boolean;\n  disableSort?: boolean;\n  sortDescriptor: DriveSortDescriptor;\n  queryParams?: Record<string, string | number | boolean>;\n  folder?: DriveFolder;\n  isFolderPage?: boolean;\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\n}\n\nconst defaultSortDescriptor: DriveSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc',\n};\n\nexport function makeFolderPage(folder: DriveFolder): DrivePage {\n  return {\n    ...makePartialFolderPage(folder.hash),\n    canUpload: folder.permissions['files.update'],\n    label: folder.name,\n    folder,\n  };\n}\n\nexport function makePartialFolderPage(hash: string): DrivePage {\n  return {\n    id: hash,\n    label: '',\n    path: getPathForFolder(hash),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg,\n    }),\n  };\n}\n\nexport function getPathForFolder(hash: string): string {\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\ninterface BootstrapDataWithRootFolder extends BootstrapData {\n  rootFolder: DriveFolder;\n}\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\n  .rootFolder;\nexport const RootFolderPage = makeFolderPage(rootFolder) as Required<DrivePage>;\n\nexport const RecentPage: DrivePage = {\n  id: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc',\n  },\n  queryParams: {\n    recentOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement,\n  }),\n};\n\nexport const SearchPage: DrivePage = {\n  id: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching,\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching,\n    };\n  },\n};\n\nexport const SharesPage: DrivePage = {\n  id: 'shares',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg,\n  }),\n};\n\nexport const TrashPage: DrivePage = {\n  id: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message(\n      'There are no files or folders in your trash currently'\n    ),\n    image: throwAwaySvg,\n  }),\n};\n\nexport const StarredPage: DrivePage = {\n  id: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true,\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message(\n      'Add stars to files and folders that you want to easily find later'\n    ),\n    image: lovingItSvg,\n  }),\n};\n\nexport const DRIVE_PAGES = [\n  RootFolderPage,\n  RecentPage,\n  SearchPage,\n  SharesPage,\n  TrashPage,\n  StarredPage,\n];\n","export enum MenuPositions {\n  DriveSidebar = 'drive-sidebar',\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\nimport {DriveFolder} from '../drive-entry';\nimport {useAuth} from '@common/auth/use-auth';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {apiClient} from '@common/http/query-client';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport interface UserFoldersApiParams {\n  userId: number;\n  workspaceId: number | null;\n}\n\ninterface UserFoldersResponse extends BackendResponse {\n  folders: DriveFolder[];\n  rootFolder: DriveFolder;\n}\n\nfunction fetchUserFolders(\n  params: UserFoldersApiParams\n): Promise<UserFoldersResponse> {\n  return apiClient\n    .get(`users/${params.userId}/folders`, {params})\n    .then(response => response.data);\n}\n\nexport function useFolders() {\n  const {user} = useAuth();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: UserFoldersApiParams = {\n    userId: user!.id,\n    workspaceId,\n  };\n  return useQuery(\n    DriveQueryKeys.fetchUserFolders(params),\n    () => fetchUserFolders(params),\n    {enabled: !!user}\n  );\n}\n","import {enableMapSet} from 'immer';\nimport create from 'zustand';\nimport {immer} from 'zustand/middleware/immer';\nimport type {DrivePage} from './drive-page/drive-page';\nimport {Key} from 'react';\nimport {DriveEntry} from './files/drive-entry';\nimport {SortColumn, SortDirection} from './layout/sorting/available-sorts';\nimport {\n  getFromLocalStorage,\n  setInLocalStorage,\n} from '@common/utils/hooks/local-storage';\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\n\nconst stableArray: DriveEntry[] = [];\nenableMapSet();\n\nexport type DriveDialog =\n  | 'rename'\n  | 'newFolder'\n  | 'preview'\n  | 'share'\n  | 'getLink'\n  | 'moveTo'\n  | 'confirmAndDeleteForever'\n  | 'trashFolderBlock';\n\nexport interface ActiveActionDialog {\n  name: DriveDialog;\n  entries: DriveEntry[];\n}\n\nexport interface DriveSortDescriptor {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n}\n\ninterface State {\n  uploadQueueIsOpen: boolean;\n  selectedEntries: Set<number>;\n  sidebarExpandedKeys: Key[];\n  activePage?: DrivePage;\n  activeActionDialog?: {\n    name: DriveDialog;\n    entries: DriveEntry[];\n  } | null;\n  entriesBeingDragged: number[];\n  viewMode: 'grid' | 'list';\n  sortDescriptor: DriveSortDescriptor;\n  contextMenuData: {x: number; y: number; entry?: DriveEntry} | null;\n}\n\ninterface Actions {\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\n  setSidebarExpandedKeys: (keys: Key[]) => void;\n  expandSidebarItem: (key: Key) => void;\n  collapseSidebarItem: (key: Key) => void;\n  toggleSidebarItem: (key: Key) => void;\n  setActivePage: (page: DrivePage) => void;\n  setActiveActionDialog: (\n    name: DriveDialog | null,\n    entries?: DriveEntry[]\n  ) => void;\n  setViewMode: (mode: 'grid' | 'list') => void;\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\n  setContextMenuData: (\n    position: {x: number; y: number; entry?: DriveEntry} | null\n  ) => void;\n  setEntriesBeingDragged: (value: number[]) => void;\n  selectEntries: (\n    entries: (number | undefined | null)[],\n    merge?: boolean\n  ) => void;\n  deselectEntries: (entries: number[] | 'all') => void;\n  reset: () => void;\n}\n\nconst initialState: State = {\n  uploadQueueIsOpen: false,\n  contextMenuData: null,\n  selectedEntries: new Set(),\n  entriesBeingDragged: [],\n  activeActionDialog: null,\n  sidebarExpandedKeys: [],\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\n    'drive.viewMode',\n    getBootstrapData().settings?.drive?.default_view || 'grid'\n  ),\n  sortDescriptor: {\n    orderBy: 'updated_at',\n    orderDir: 'desc',\n  },\n};\n\nexport const useDriveStore = create<State & Actions>()(\n  immer((set, get) => ({\n    ...initialState,\n    setUploadQueueIsOpen: isOpen => {\n      set(state => {\n        state.uploadQueueIsOpen = isOpen;\n      });\n    },\n    setContextMenuData: data => {\n      set(state => {\n        state.contextMenuData = data;\n      });\n    },\n    setSortDescriptor: value => {\n      set(state => {\n        const activePageId = get().activePage?.id;\n        if (activePageId) {\n          setInLocalStorage('selectedSorting', {\n            ...getFromLocalStorage('selectedSorting'),\n            [activePageId]: value,\n          });\n        }\n        state.sortDescriptor = value;\n      });\n    },\n    setActivePage: value => {\n      set(state => {\n        state.activePage = value;\n\n        const storedDescriptor =\n          getFromLocalStorage('selectedSorting')?.[value.id];\n        state.sortDescriptor = storedDescriptor\n          ? storedDescriptor\n          : value.sortDescriptor;\n      });\n    },\n    setEntriesBeingDragged: value => {\n      set(state => {\n        state.entriesBeingDragged = value;\n      });\n    },\n    setActiveActionDialog: (name, entries = stableArray) => {\n      set(state => {\n        const current = get().activeActionDialog;\n        // prevent creating a new object, if neither name nor entries changed\n        if (current?.name !== name || current.entries !== entries) {\n          state.activeActionDialog = name ? {name, entries} : null;\n        }\n      });\n    },\n    setViewMode: mode => {\n      set(state => {\n        state.viewMode = mode;\n        setInLocalStorage('drive.viewMode', mode);\n      });\n    },\n    setSidebarExpandedKeys: value =>\n      set(state => {\n        state.sidebarExpandedKeys = value;\n      }),\n    expandSidebarItem: key =>\n      set(state => {\n        if (!state.sidebarExpandedKeys.includes(key)) {\n          state.sidebarExpandedKeys.push(key);\n        }\n      }),\n    collapseSidebarItem: key =>\n      set(state => {\n        const index = state.sidebarExpandedKeys.indexOf(key);\n        if (index > -1) {\n          state.sidebarExpandedKeys.splice(index, 1);\n        }\n      }),\n    toggleSidebarItem: key =>\n      set(state => {\n        if (state.sidebarExpandedKeys.includes(key)) {\n          state.expandSidebarItem(key);\n        } else {\n          state.collapseSidebarItem(key);\n        }\n      }),\n    selectEntries: (entries, merge) => {\n      set(state => {\n        if (!merge) {\n          state.selectedEntries.clear();\n        }\n        entries.forEach(e => e && state.selectedEntries.add(e));\n      });\n    },\n    deselectEntries: entries => {\n      set(state => {\n        if (!state.selectedEntries.size) return;\n        if (entries === 'all') {\n          state.selectedEntries = new Set();\n        } else {\n          entries.forEach(e => state.selectedEntries.delete(e));\n        }\n      });\n    },\n    reset: () => {\n      set(initialState);\n    },\n  }))\n);\n\nexport function driveState() {\n  return useDriveStore.getState();\n}\n\nexport function useActiveDialogEntry() {\n  const dialog = useDriveStore(s => s.activeActionDialog);\n  // this will only be used inside dialog, so entry will always be set in that case\n  return dialog?.entries[0]!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n  destination: FileEntry | null;\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number | null;\n}\n\nexport function useMoveEntries() {\n  return useMutation(\n    (payload: Payload) => {\n      toast.loading(\n        message('Moving [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true}\n      );\n      return moveEntries(payload);\n    },\n    {\n      onSuccess: (r, p) => {\n        invalidateEntryQueries();\n        toast(\n          message('Moved [one 1 item|other :count items] to \":destination\"', {\n            values: {\n              count: p.entryIds.length,\n              destination: (r.destination || RootFolderPage.folder).name,\n            },\n          }),\n          {disableEnterAnimation: true}\n        );\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not move items'), null, {\n          disableEnterAnimation: true,\n        }),\n    }\n  );\n}\n\nfunction moveEntries(payload: Payload): Promise<Response> {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient\n    .post('file-entries/move', payload)\n    .then(response => response.data);\n}\n","import {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {useCallback} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\nimport {queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {useSettings} from '@common/core/settings/use-settings';\n\nexport type UploadFilesFn = (\n  files: (File | UploadedFile)[] | FileList,\n  options?: UploadStrategyConfig\n) => void;\n\nconst EightMB = 8388608;\n\nexport function useDriveUploadQueue() {\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\n  const activePage = useDriveStore(s => s.activePage);\n  const {data: usage} = useStorageSummary();\n  const {workspaceId} = useActiveWorkspaceId();\n  const parentId = activePage?.folder?.id || null;\n\n  const {uploads} = useSettings();\n\n  const maxFileSize = uploads.max_size || EightMB;\n  const allowedFileTypes = uploads.allowed_extensions;\n  const blockedFileTypes = uploads.blocked_extensions;\n\n  const uploadFiles: UploadFilesFn = useCallback(\n    (files, options = {}) => {\n      if (!options.metadata) {\n        options.metadata = {};\n      }\n      options.metadata.workspaceId = workspaceId;\n      if (!options.metadata.parentId) {\n        options.metadata.parentId = parentId;\n      }\n\n      files = [...files].map(file => {\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\n      });\n\n      // check if this upload will not put user over their allowed storage space\n      if (usage) {\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\n        const currentlyUsing = usage.used;\n        const availableSpace = usage.available;\n\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\n          toast.danger(\n            message(\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\n              {values: {space: usage.availableFormatted}}\n            ),\n            {action: {action: '/pricing', label: message('Upgrade')}}\n          );\n          return;\n        }\n      }\n\n      uploadMultiple(files, {\n        ...options,\n        restrictions: {\n          maxFileSize,\n          allowedFileTypes,\n          blockedFileTypes,\n        },\n        onSuccess: (entry, file) => {\n          options?.onSuccess?.(entry, file);\n          invalidateEntryQueries();\n          queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        },\n      });\n      driveState().setUploadQueueIsOpen(true);\n    },\n    [\n      uploadMultiple,\n      parentId,\n      workspaceId,\n      allowedFileTypes,\n      blockedFileTypes,\n      maxFileSize,\n      usage,\n    ]\n  );\n  return {uploadFiles};\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport interface PartialFolder {\n  id: number;\n  name: string;\n  path: string;\n  parent_id: number | null;\n  type: string;\n}\n\nexport function canMoveEntriesInto(\n  targets: FileEntry[],\n  destination: PartialFolder\n) {\n  if (destination.type !== 'folder') return false;\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (\n      destination.id === target.parent_id ||\n      // root folder check\n      (!target.parent_id && destination.id === 0)\n    ) {\n      return false;\n    }\n\n    return !destinationIsInTarget(destination, target);\n  });\n}\n\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\nimport {useMoveEntries} from './queries/use-move-entries';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\nimport {\n  ConnectedDraggable,\n  MixedDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {NativeFileDraggable} from '@common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '@app/drive/drive-store';\n\nexport function useFolderDropAction(folder: FileEntry) {\n  const moveEntries = useMoveEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {parentId: folder.id},\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData() as FileEntry[];\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id),\n        });\n        driveState().deselectEntries('all');\n      }\n    }\n  };\n\n  return {onDrop};\n}\n\nexport function folderAcceptsDrop(target: MixedDraggable, entry: FileEntry) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData() as FileEntry[];\n    return canMoveEntriesInto(entries, entry);\n  }\n  return true;\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport function makeFolderTreeDragId(entry: FileEntry) {\n  return `${entry.id}-tree`;\n}\n\nexport function isFolderTreeDragId(id: string | number): boolean {\n  return `${id}`.endsWith('-tree');\n}\n","import {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {driveState} from '../../drive-store';\nimport {RefObject, useState} from 'react';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../../files/use-folder-drop-action';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\n\ninterface Props {\n  folder: DriveFolder;\n  ref: RefObject<HTMLDivElement>;\n}\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {onDrop} = useFolderDropAction(folder);\n\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([\n          ...driveState().sidebarExpandedKeys,\n          folder.id,\n        ]);\n      }\n    },\n    onDrop,\n  });\n\n  return {...dropProps, isDragOver};\n}\n","import {createContext, Key} from 'react';\n\nexport interface TreeContextValue {\n  expandedKeys: Key[];\n  setExpandedKeys: (value: Key[]) => void;\n  selectedKeys: Key[];\n  setSelectedKeys: (value: Key[]) => void;\n  focusedNode?: Key;\n  setFocusedNode: (node?: Key) => void;\n}\n\nexport const TreeContext = createContext<TreeContextValue>(null!);\n","import {TreeItemRenderer} from './tree-item';\nimport {cloneElement} from 'react';\nimport {TreeNode} from './tree';\n\ninterface RenderTreeProps<T extends TreeNode> {\n  nodes: T[];\n  parentNode?: T;\n  itemRenderer: TreeItemRenderer<T>;\n  level?: number;\n}\nexport function renderTree<T extends TreeNode>({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level,\n}: RenderTreeProps<T>) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer,\n    });\n  });\n}\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n} from 'react';\nimport {TreeContext} from './tree-context';\nimport clsx from 'clsx';\nimport {ArrowRightIcon} from '../../icons/material/ArrowRight';\n\ninterface TreeLabelProps {\n  level?: number;\n  node: any;\n  icon?: ReactNode;\n  label?: ReactNode;\n  className?: string;\n}\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\n      useContext(TreeContext);\n    const isExpanded = expandedKeys.includes(node.id);\n    const isSelected = selectedKeys.includes(node.id);\n\n    const handleExpandIconClick: MouseEventHandler = e => {\n      e.stopPropagation();\n      const index = expandedKeys.indexOf(node.id);\n      const newExpandedKeys = [...expandedKeys];\n      if (index > -1) {\n        newExpandedKeys.splice(index, 1);\n      } else {\n        newExpandedKeys.push(node.id);\n      }\n      setExpandedKeys(newExpandedKeys);\n    };\n\n    return (\n      <div\n        {...domProps}\n        ref={ref}\n        onClick={e => {\n          e.stopPropagation();\n          setSelectedKeys([node.id]);\n        }}\n        className={clsx(\n          'flex flex-nowrap whitespace-nowrap items-center gap-4 py-6 rounded header cursor-pointer overflow-hidden text-ellipsis tree-label',\n          className,\n          isSelected && 'bg-primary/selected text-primary font-bold',\n          !isSelected && 'hover:bg-hover'\n        )}\n      >\n        {level > 0 && (\n          <div className=\"flex\">\n            {Array.from({length: level}).map((_, i) => {\n              return <div key={i} className=\"w-24 h-24\" />;\n            })}\n          </div>\n        )}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon\n            className={clsx(\n              'icon-sm cursor-default transition-transform',\n              isExpanded && 'rotate-90'\n            )}\n          />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>\n    );\n  }\n);\nTreeLabel.displayName = 'TreeLabel';\n","import React, {HTMLAttributes, ReactElement, ReactNode, Ref, useContext, useEffect} from 'react';\nimport {useFocusManager} from '@react-aria/focus';\nimport {TreeContext} from './tree-context';\nimport {createEventHandler} from '../../utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {TreeNode} from './tree';\nimport {renderTree} from './render-tree';\nimport {TreeLabel} from './tree-label';\n\nexport type TreeItemRenderer<T extends TreeNode> = (\n  node: any\n) => ReactElement<TreeItemProps<T>>;\n\nexport interface TreeItemProps<T extends TreeNode>\n  extends HTMLAttributes<HTMLElement> {\n  label: ReactNode;\n  icon: ReactNode;\n  node?: T;\n  parentNode?: T;\n  level?: number;\n  index?: number;\n  itemRenderer?: TreeItemRenderer<T>;\n  labelRef?: Ref<HTMLDivElement>;\n  labelClassName?: string;\n  className?: string;\n}\nexport function TreeItem<T extends TreeNode>({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}: TreeItemProps<T>) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys,\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n\n  if (!node || !itemRenderer) return null;\n\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused =\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (!hasChildren) return;\n\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl =\n            document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            (parentEl as HTMLElement).focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (\n              childNode.children.length &&\n              !expandedKeys.includes(childNode.id)\n            ) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n\n  return (\n    <li\n      role=\"treeitem\"\n      aria-expanded={isExpanded ? 'true' : 'false'}\n      aria-selected={isSelected}\n      tabIndex={isFocused ? 0 : -1}\n      onKeyDown={createEventHandler(onKeyDown)}\n      onFocus={e => {\n        e.stopPropagation();\n        setFocusedNode(node.id);\n      }}\n      onBlur={e => {\n        e.stopPropagation();\n        // only clear focus state when focus moves outside the tree\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n          setFocusedNode(undefined);\n        }\n      }}\n      className={clsx(\n        'outline-none',\n        // focus direct .tree-label child when this element has :focus-visible\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\n        className\n      )}\n    >\n      <TreeLabel\n        ref={labelRef}\n        className={labelClassName}\n        node={node}\n        level={level}\n        label={label}\n        icon={icon}\n        {...domProps}\n      />\n      <AnimatePresence initial={false}>\n        {isExpanded ? (\n          <m.ul\n            key={`${node.id}-group`}\n            role=\"group\"\n            initial=\"closed\"\n            animate=\"open\"\n            exit=\"closed\"\n            variants={{\n              open: {opacity: 1, height: 'auto'},\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\n            }}\n          >\n            {renderTree({\n              nodes: node.children,\n              parentNode: node,\n              itemRenderer,\n              level,\n            })}\n          </m.ul>\n        ) : null}\n      </AnimatePresence>\n    </li>\n  );\n}\n","import React, {Key, useState} from 'react';\nimport {useControlledState} from '@react-stately/utils';\nimport {FocusScope} from '@react-aria/focus';\nimport {TreeContext, TreeContextValue} from './tree-context';\nimport {TreeItemRenderer} from './tree-item';\nimport {renderTree} from './render-tree';\n\nexport interface TreeNode {\n  id: number | string;\n  children: TreeNode[];\n}\n\ninterface TreeProps<T extends TreeNode> {\n  children: TreeItemRenderer<T>;\n  nodes: T[];\n  selectedKeys?: Key[];\n  expandedKeys?: Key[];\n  defaultExpandedKeys?: Key[];\n  onExpandedKeysChange?: (value: Key[]) => void;\n  defaultSelectedKeys?: Key[];\n  onSelectedKeysChange?: (value: Key[]) => void;\n}\nexport function Tree<T extends TreeNode>({\n  children,\n  nodes,\n  ...props\n}: TreeProps<T>) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys,\n    props.defaultSelectedKeys,\n    props.onExpandedKeysChange\n  );\n  const [selectedKeys, setSelectedKeys] = useControlledState(\n    props.selectedKeys,\n    props.defaultSelectedKeys,\n    props.onSelectedKeysChange\n  );\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\n\n  const value: TreeContextValue = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode,\n  };\n\n  return (\n    <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>\n  );\n}\n\ninterface TreeRootProps<T extends TreeNode> {\n  nodes: TreeNode[];\n  itemRenderer: TreeItemRenderer<T>;\n}\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\n  return (\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>\n  );\n}\n","import React, {useMemo, useRef} from 'react';\nimport {arrayToTree} from 'performant-array-to-tree';\nimport {useFolders} from '../../files/queries/use-folders';\nimport {DriveFolder} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\nimport {mergeProps} from '@react-aria/utils';\nimport {\n  ConnectedDraggable,\n  useDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport clsx from 'clsx';\nimport {BackupIcon} from '@common/icons/material/Backup';\nimport {TreeItem, TreeItemProps} from '@common/ui/tree/tree-item';\nimport {Tree} from '@common/ui/tree/tree';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface TreeFolder extends DriveFolder {\n  children: TreeFolder[];\n}\n\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {data} = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys: number[] = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null,\n    }) as TreeFolder[];\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders,\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n\n  return (\n    <Tree\n      nodes={tree}\n      expandedKeys={expandedKeys}\n      onExpandedKeysChange={keys => {\n        driveState().setSidebarExpandedKeys(keys);\n      }}\n      selectedKeys={selectedKeys}\n      onSelectedKeysChange={([id]) => {\n        const entryHash = findHash(id as number, tree);\n        if (entryHash) {\n          navigate(getPathForFolder(entryHash));\n        } else {\n          navigate(RootFolderPage.path);\n        }\n      }}\n    >\n      {() => <FolderTreeItem />}\n    </Tree>\n  );\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\n  const labelRef = useRef<HTMLDivElement>(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(node.id)\n  );\n\n  const {draggableProps} = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node],\n  });\n\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef,\n  });\n\n  return (\n    <TreeItem\n      {...mergeProps(draggableProps, droppableProps, props)}\n      onContextMenu={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        driveState().deselectEntries('all');\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY,\n          entry: node,\n        });\n      }}\n      labelRef={labelRef}\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\n      labelClassName={clsx(\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\n        isDragging && 'opacity-30',\n        isRootFolder && 'h-40'\n      )}\n      icon={\n        isRootFolder ? (\n          <BackupIcon size=\"md\" className=\"mr-6\" />\n        ) : (\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\n        )\n      }\n      label={node.name}\n    />\n  );\n}\n\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {getAxiosErrorMessage} from '@common/utils/http/get-axios-error-message';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n  emptyTrash?: boolean;\n  deleteForever?: boolean;\n}\n\nfunction deleteEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/delete', payload)\n    .then(response => response.data);\n}\n\nexport function useDeleteEntries() {\n  return useMutation(\n    (payload: Payload) => {\n      toast.loading(\n        payload.emptyTrash\n          ? message('Emptying trash...')\n          : message('Moving to trash...'),\n        {disableExitAnimation: true}\n      );\n      return deleteEntries(payload);\n    },\n    {\n      onSuccess: (r, {entryIds, emptyTrash, deleteForever}) => {\n        invalidateEntryQueries();\n        queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        if (emptyTrash) {\n          toast(message('Emptied trash'), {disableEnterAnimation: true});\n        } else if (deleteForever) {\n          toast(\n            message('Permanently deleted [one 1 item|other :count items]', {\n              values: {count: entryIds.length},\n            }),\n            {disableEnterAnimation: true}\n          );\n        } else {\n          toast(\n            message('Moved [one 1 item|other :count items] to trash', {\n              values: {count: entryIds.length},\n            }),\n            {disableEnterAnimation: true}\n          );\n        }\n      },\n      onError: (err, {emptyTrash}) => {\n        const backendError = getAxiosErrorMessage(err);\n        if (backendError) {\n          toast.danger(backendError, {disableEnterAnimation: true});\n        } else if (emptyTrash) {\n          toast.danger('could not empty trash', {disableEnterAnimation: true});\n        } else {\n          toast.danger('Could not delete items', {disableEnterAnimation: true});\n        }\n      },\n    }\n  );\n}\n","import {CustomMenu, CustomMenuItem} from '@common/menus/custom-menu';\nimport {MenuPositions} from '../../menu-positions';\nimport React, {\n  ComponentPropsWithoutRef,\n  forwardRef,\n  useRef,\n  useState,\n} from 'react';\nimport {MenuItemConfig} from '@common/core/settings/settings';\nimport clsx from 'clsx';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {FolderTree} from './folder-tree';\nimport {useDeleteEntries} from '../../files/queries/use-delete-entries';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\n\nexport function SidebarMenu() {\n  const {workspaceId} = useActiveWorkspaceId();\n  return (\n    <div className=\"text-muted mt-26 px-12\">\n      <FolderTree />\n      <CustomMenu\n        menu={MenuPositions.DriveSidebar}\n        orientation=\"vertical\"\n        gap=\"gap-0\"\n      >\n        {item => {\n          if (item.action === '/drive/trash') {\n            return <TrashMenuItem key={item.id} item={item} />;\n          }\n          return <MenuItem key={item.id} item={item} />;\n        }}\n      </CustomMenu>\n    </div>\n  );\n}\n\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\n  item: MenuItemConfig;\n  className?: string;\n}\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\n  ({item, className, ...domProps}, ref) => {\n    return (\n      <CustomMenuItem\n        className={({isActive}) =>\n          clsx(\n            className,\n            'h-40 w-full my-4 px-24 rounded',\n            isActive\n              ? 'text-primary font-bold bg-primary/selected cursor-default'\n              : 'hover:bg-hover'\n          )\n        }\n        item={item}\n        ref={ref}\n        {...domProps}\n      />\n    );\n  }\n);\n\ninterface TrashMenuItemProps {\n  item: MenuItemConfig;\n}\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef<HTMLAnchorElement>(null);\n\n  const {droppableProps} = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\n      deleteEntries.mutate({entryIds, deleteForever: false});\n    },\n  });\n  return (\n    <MenuItem\n      className={clsx(isDragOver && 'bg-primary/selected')}\n      ref={ref}\n      {...droppableProps}\n      item={item}\n    />\n  );\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {Button} from '@common/ui/buttons/button';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {Trans} from '@common/i18n/trans';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {UploadFileIcon} from '@common/icons/material/UploadFile';\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {AddIcon} from '@common/icons/material/Add';\n\ninterface CreateNewButtonProps {\n  isCompact?: boolean;\n  className?: string;\n}\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {uploadFiles} = useDriveUploadQueue();\n\n  const button = isCompact ? (\n    <IconButton size=\"md\">\n      <AddIcon />\n    </IconButton>\n  ) : (\n    <Button\n      className=\"min-w-160\"\n      color=\"primary\"\n      variant=\"flat\"\n      size=\"sm\"\n      startIcon={<FileUploadIcon />}\n      disabled={!activePage?.canUpload}\n    >\n      <Trans message=\"Upload\" />\n    </Button>\n  );\n\n  return (\n    <div className={className}>\n      <MenuTrigger\n        onItemSelected={async value => {\n          if (value === 'uploadFiles') {\n            uploadFiles(await openUploadWindow({multiple: true}));\n          } else if (value === 'uploadFolder') {\n            uploadFiles(await openUploadWindow({directory: true}));\n          } else if (value === 'newFolder') {\n            const activeFolder = driveState().activePage?.folder;\n            driveState().setActiveActionDialog(\n              'newFolder',\n              activeFolder ? [activeFolder] : []\n            );\n          }\n        }}\n      >\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>\n  );\n}\n","import React from 'react';\nimport {StorageMeter} from './storage-summary/storage-meter';\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\nimport {RootFolderPage} from '../../drive-page/drive-page';\nimport {SidebarMenu} from './sidebar-menu';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {CreateNewButton} from '../create-new-button';\nimport {Button} from '@common/ui/buttons/button';\nimport {Link} from 'react-router-dom';\nimport {Trans} from '@common/i18n/trans';\nimport {useAuth} from '@common/auth/use-auth';\nimport clsx from 'clsx';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface SidebarProps {\n  className?: string;\n}\nexport function Sidebar({className}: SidebarProps) {\n  const {isSubscribed} = useAuth();\n  const {billing} = useSettings();\n  return (\n    <div\n      className={clsx(\n        className,\n        'text-sm text-muted font-medium bg-alt border-r flex flex-col gap-20'\n      )}\n    >\n      <div className=\"flex-auto\">\n        <CreateNewButton className=\"text-center px-12 pt-28\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable && (\n          <div className=\"pl-60 mt-14\">\n            <Button\n              elementType={Link}\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\n              variant=\"outline\"\n              color=\"primary\"\n              size=\"xs\"\n            >\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      <WorkspaceSwitcher />\n    </div>\n  );\n}\n\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return (\n    <WorkspaceSelector\n      onChange={() => {\n        navigate(RootFolderPage.path);\n      }}\n      className=\"w-full px-24 py-18 border-t flex-shrink-0 mt-auto\"\n    />\n  );\n}\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\nimport {useSearchParams} from 'react-router-dom';\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\nimport {DriveEntry, DriveFolder} from '../drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {SortColumn, SortDirection} from '../../layout/sorting/available-sorts';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {makeFolderPage, SearchPage} from '../../drive-page/drive-page';\nimport {useEffect} from 'react';\nimport {shallowEqual} from '@common/utils/shallow-equal';\n\nexport interface DriveApiIndexParams {\n  orderBy?: SortColumn;\n  orderDir?: SortDirection;\n  folderId?: string | number | null;\n  userId?: number;\n  query?: string;\n  filters?: string;\n  deletedOnly?: boolean;\n  starredOnly?: boolean;\n  sharedOnly?: boolean;\n  perPage?: number;\n  page?: number;\n  recentOnly?: boolean;\n  workspaceId?: number | null;\n  pageId?: number | string;\n}\n\ninterface EntriesPaginationResponse\n  extends LengthAwarePaginationResponse<DriveEntry> {\n  folder?: DriveFolder;\n}\n\nfunction fetchEntries(\n  params: DriveApiIndexParams\n): Promise<EntriesPaginationResponse> {\n  return apiClient\n    .get('drive/file-entries', {\n      params,\n    })\n    .then(response => response.data);\n}\n\nconst setActiveFolder = (response: InfiniteData<EntriesPaginationResponse>) => {\n  const firstPage = response.pages[0];\n  const newFolder = firstPage.folder;\n  const currentPage = driveState().activePage;\n\n  if (\n    newFolder &&\n    currentPage &&\n    currentPage.id === newFolder.hash &&\n    // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\n    (!currentPage.folder ||\n      !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))\n  ) {\n    driveState().setActivePage(makeFolderPage(newFolder));\n  }\n  return response;\n};\n\nexport function usePaginatedEntries() {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const params: DriveApiIndexParams = {\n    pageId: page?.id,\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.id : null,\n    workspaceId,\n    ...sortDescriptor,\n  };\n\n  // if we have no search query, there's no need to call the API, show no results message instead\n  const isDisabledInSearch =\n    page === SearchPage && !params.query && !params.filters;\n\n  const query = useInfiniteQuery(\n    DriveQueryKeys.fetchEntries(params),\n    ({pageParam = 1}) => {\n      return fetchEntries({...params, page: pageParam});\n    },\n    {\n      getNextPageParam: lastResponse => {\n        const currentPage = lastResponse.current_page;\n        const lastPage = lastResponse.last_page;\n        if (currentPage >= lastPage) {\n          return undefined;\n        }\n        return currentPage + 1;\n      },\n      enabled: page != null && !isDisabledInSearch,\n    }\n  );\n\n  // need to do this in effect, to avoid react errors about\n  // multiple components re-rendering at the same time\n  useEffect(() => {\n    if (query.data?.pages[0].folder) {\n      setActiveFolder(query.data);\n    }\n  }, [query.data]);\n\n  return query;\n}\n\nexport function getAllEntries() {\n  const caches = queryClient.getQueriesData<\n    InfiniteData<EntriesPaginationResponse>\n  >(DriveQueryKeys.fetchEntries());\n  return caches.reduce<DriveEntry[]>((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}\n","import {\n  BackendFilter,\n  FilterControlType,\n  FilterOperator,\n} from '@common/datatable/filters/backend-filter';\nimport {FILE_ENTRY_TYPE_FILTER} from '@common/admin/file-entry/file-entry-index-filters';\nimport {\n  CreatedAtFilter,\n  UpdatedAtFilter,\n} from '@common/datatable/filters/timestamp-filters';\nimport {message} from '@common/i18n/message';\n\nexport const driveSearchFilters: BackendFilter[] = [\n  FILE_ENTRY_TYPE_FILTER,\n  new BackendFilter({\n    type: FilterControlType.Select,\n    key: 'owner_id',\n    label: message('Owner'),\n    description: message('User file was uploaded by'),\n    defaultValue: '02',\n    options: [\n      {\n        key: '01',\n        label: message('anyone'),\n        value: {value: null, operator: '!='},\n      },\n      {\n        key: '02',\n        label: message('me'),\n        value: '{authId}',\n      },\n      {\n        key: '03',\n        label: message('not me'),\n        value: {value: '{authId}', operator: '!='},\n      },\n    ],\n  }),\n  new CreatedAtFilter({\n    description: message('Date file was uploaded'),\n  }),\n  new UpdatedAtFilter({\n    description: message('Date file was last changed'),\n  }),\n  new BackendFilter({\n    type: FilterControlType.BooleanToggle,\n    key: 'deleted_at',\n    label: message('In trash'),\n    description: message('Only show files that are in the trash'),\n    defaultOperator: FilterOperator.ne,\n    defaultValue: null,\n  }),\n  new BackendFilter({\n    type: FilterControlType.BooleanToggle,\n    key: 'shareableLink',\n    label: message('Has shareable link'),\n    description: message('Only show files that have a shareable link'),\n    defaultValue: '*',\n    defaultOperator: FilterOperator.has,\n  }),\n  new BackendFilter({\n    type: FilterControlType.BooleanToggle,\n    key: 'sharedByMe',\n    label: message('Shared by me'),\n    description: message('Only show files that are shared with someone'),\n    defaultValue: true,\n  }),\n];\n","import React, {useContext} from 'react';\nimport {driveSearchFilters} from './drive-search-filters';\nimport {useDriveStore} from '../drive-store';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\n\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\n\nexport function SearchFilterList() {\n  const activePage = useDriveStore(s => s.activePage);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  if (activePage !== SearchPage) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-10 mb-30 px-10 md:px-26\">\n      {isMobileMode && (\n        <TextField\n          autoFocus\n          className=\"mb-20\"\n          startAdornment={<SearchIcon />}\n          placeholder=\"Type to search\"\n        />\n      )}\n      <FilterList\n        filters={driveSearchFilters}\n        pinnedFilters={alwaysShownFilters}\n      />\n    </div>\n  );\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function restrictResizableWithinBoundary(\n  rect: InteractableRect,\n  boundaryRect: InteractableRect\n) {\n  const boundedRect = {...rect};\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(\n    boundedRect.width,\n    boundaryRect.width - boundedRect.left\n  );\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(\n    boundedRect.height,\n    boundaryRect.height - boundedRect.top\n  );\n\n  return boundedRect;\n}\n","import {RefObject, useLayoutEffect, useRef} from 'react';\nimport {droppables} from '../drag-state';\nimport {InteractableRect} from '../../interactable-event';\nimport {DraggableId} from '../use-draggable';\n\nexport interface ConnectedMouseSelectable {\n  id: DraggableId;\n  onSelected?: () => void;\n  onDeselected?: () => void;\n  ref: RefObject<HTMLElement>;\n  rect?: InteractableRect;\n}\n\nexport const mouseSelectables = new Map<\n  DraggableId,\n  ConnectedMouseSelectable\n>();\n\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\n  const {id, ref} = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.(),\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}\n","import {InteractableRect} from '../interactable-event';\n\nexport function rectsIntersect(\n  rectA?: InteractableRect,\n  rectB?: InteractableRect\n) {\n  if (!rectA || !rectB) return false;\n  return (\n    rectA.left <= rectB.left + rectB.width &&\n    rectA.left + rectA.width >= rectB.left &&\n    rectA.top <= rectB.top + rectB.height &&\n    rectA.top + rectA.height >= rectB.top\n  );\n}\n","import React, {RefObject, useRef} from 'react';\nimport {usePointerEvents} from '../../use-pointer-events';\nimport {InteractableRect} from '../../interactable-event';\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\nimport {activeInteraction} from '../../active-interaction';\nimport {updateRects} from '../update-rects';\nimport {mouseSelectables} from './use-mouse-selectable';\nimport {rectsIntersect} from '../../utils/rects-intersect';\nimport {DraggableId} from '../use-draggable';\n\ninterface SelectionState {\n  startPoint?: {x: number; y: number; scrollTop: number};\n  endPoint?: {x: number; y: number};\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\n  scrollListener?: EventListener;\n  rafId?: number;\n  selectedIds?: Set<DraggableId>;\n}\n\ninterface Props {\n  onPointerDown?: (e: React.PointerEvent) => void;\n  containerRef?: RefObject<HTMLDivElement>;\n}\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\n  const defaultRef = useRef<HTMLDivElement>(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef<HTMLDivElement>(null);\n\n  let state = useRef<SelectionState>({}).current;\n\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y),\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n\n    const boundedRect = state.boundaryRect\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\n      : {...newRect};\n\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\n    };\n\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set(),\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0,\n      };\n\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth,\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {x: e.clientX, y: e.clientY};\n\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge =\n          e.clientY + 20 >\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({top: 10});\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({top: -10});\n        }\n      }\n\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener(\n          'scroll',\n          state.scrollListener\n        );\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    },\n  });\n\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef,\n    },\n    boxProps: {ref: boxRef},\n  };\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nfunction createShareableLink(\n  entryId?: number | null\n): Promise<FetchShareableLinkResponse> {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient\n    .post(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useCreateShareableLink() {\n  return useMutation(({entryId}: Payload) => createShareableLink(entryId), {\n    onSuccess: (data, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        data\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/star', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useAddStarToEntries() {\n  return useMutation((payload: Payload) => addStarToEntries(payload), {\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Starred [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\n  });\n}\n","import {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {Tag} from '@common/tags/tag';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {useMutation} from '@tanstack/react-query';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  tag: Tag;\n}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/unstar', {entryIds})\n    .then(response => response.data);\n}\n\nexport function useRemoveStarFromEntries() {\n  return useMutation((payload: Payload) => removeStarFromEntries(payload), {\n    onSuccess: (data, {entryIds}) => {\n      invalidateEntryQueries();\n      toast(\n        message('Removed star from [one 1 item|other :count items]', {\n          values: {count: entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\n  });\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntry} from '../drive-entry';\nimport {toast} from '@common/ui/toast/toast';\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {\n  entries: DriveEntry[];\n}\n\ninterface Payload {\n  entryIds: number[];\n  destinationId?: number;\n}\n\nfunction duplicateEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/duplicate', payload)\n    .then(response => response.data);\n}\n\nexport function useDuplicateEntries() {\n  return useMutation(\n    (payload: Payload) => {\n      toast.loading(\n        message('Duplicating [one 1 item|other :count items]...', {\n          values: {\n            count: payload.entryIds.length,\n          },\n        }),\n        {disableExitAnimation: true}\n      );\n      return duplicateEntries(payload);\n    },\n    {\n      onSuccess: (r, p) => {\n        invalidateEntryQueries();\n        queryClient.invalidateQueries(DriveQueryKeys.fetchStorageSummary);\n        toast(\n          message('Duplicated [one 1 item|other :count items]', {\n            values: {count: p.entryIds.length},\n          }),\n          {disableEnterAnimation: true}\n        );\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not duplicate items'), null, {\n          disableEnterAnimation: true,\n        }),\n    }\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveEntryUser} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  users: DriveEntryUser[];\n}\n\ninterface Payload {\n  userId: number | 'me';\n  entryIds: number[];\n}\n\nexport function useUnshareEntries() {\n  return useMutation((payload: Payload) => unshareEntries(payload), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n  });\n}\n\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface Response extends BackendResponse {}\n\ninterface Payload {\n  entryIds: number[];\n}\n\nexport function useRestoreEntries() {\n  return useMutation((payload: Payload) => restoreEntries(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message('Restored [one 1 item|other :count items]', {\n          values: {count: p.entryIds.length},\n        })\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\n  });\n}\n\nfunction restoreEntries(payload: Payload): Promise<Response> {\n  return apiClient\n    .post('file-entries/restore', payload)\n    .then(response => response.data);\n}\n","import {message} from '@common/i18n/message';\nimport {PersonAddIcon} from '@common/icons/material/PersonAdd';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {EntryAction} from './entry-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {RemoveRedEyeIcon} from '@common/icons/material/RemoveRedEye';\nimport {LinkIcon} from '@common/icons/material/Link';\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\nimport {StarIcon} from '@common/icons/material/Star';\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\nimport {StarOutlineIcon} from '@common/icons/material/StarOutline';\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\nimport {DriveFileMoveIcon} from '@common/icons/material/DriveFileMove';\nimport {DriveFileRenameOutlineIcon} from '@common/icons/material/DriveFileRenameOutline';\nimport {ContentCopyIcon} from '@common/icons/material/ContentCopy';\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\nimport {DeleteIcon} from '@common/icons/material/Delete';\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\nimport {toast} from '@common/ui/toast/toast';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\nimport {RestoreIcon} from '@common/icons/material/Restore';\n\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n\n  return [\n    preview,\n    share,\n    getLink,\n    addStar,\n    removeStar,\n    moveTo,\n    rename,\n    makeCopy,\n    download,\n    deleteAction,\n    removeSharedEntries,\n    restoreEntries,\n  ].filter(action => !!action) as EntryAction[];\n}\n\nexport function usePreviewAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    },\n  };\n}\n\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    },\n  };\n}\n\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({entryId: entries[0].id});\n      driveState().setActiveActionDialog('getLink', entries);\n    },\n  };\n}\n\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === SharesPage ||\n    activePage === TrashPage\n  ) {\n    return;\n  }\n\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    },\n  };\n}\n\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    },\n  };\n}\n\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (\n    entries.length > 1 ||\n    !entries.every(e => e.permissions['files.update']) ||\n    activePage === TrashPage\n  )\n    return;\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({entryIds: entries.map(e => e.id)});\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nfunction useDownloadEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash),\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useDeleteEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage === SharesPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label:\n      activePage === TrashPage ? message('Delete forever') : message('Remove'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      if (activePage === TrashPage) {\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\n      } else {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: activePage === TrashPage,\n        });\n        driveState().selectEntries([]);\n      }\n    },\n  };\n}\n\nexport function useRestoreEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (\n    activePage !== TrashPage ||\n    !entries.every(e => e.permissions['files.delete'])\n  )\n    return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id),\n      });\n      driveState().selectEntries([]);\n    },\n  };\n}\n\nexport function useRemoveSharedEntriesAction(\n  entries: DriveEntry[]\n): EntryAction | undefined {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate(\n        {entryIds: entries.map(e => e.id), userId: 'me'},\n        {\n          onSuccess: (r, p) => {\n            toast(\n              message('Removed [one 1 item|other {count} items]', {\n                values: {count: p.entryIds.length},\n              })\n            );\n          },\n          onError: err =>\n            showHttpErrorToast(err, message('Could not remove items')),\n        }\n      );\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import {EntryAction} from './entry-action';\nimport {message} from '@common/i18n/message';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\nimport {DeleteForeverIcon} from '@common/icons/material/DeleteForever';\n\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\n    action => !!action\n  ) as EntryAction[];\n}\n\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    },\n  };\n}\n\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({multiple: true}));\n    },\n  };\n}\n\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\n  const {uploadFiles} = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({directory: true}));\n    },\n  };\n}\n\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\n      driveState().selectEntries([]);\n    },\n  };\n}\n","import React, {createElement, ReactElement} from 'react';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useEntryActions} from './use-entry-actions';\nimport {EntryAction} from './entry-action';\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from './use-drive-page-actions';\n\ninterface Props {\n  children: ReactElement;\n  entries?: DriveEntry[];\n  page?: DrivePage;\n}\nexport function EntryActionMenuTrigger({children, entries, page}: Props) {\n  if (page?.id === RootFolderPage.id) {\n    return <PageMenu page={RootFolderPage}>{children}</PageMenu>;\n  }\n\n  if (page === TrashPage) {\n    return <PageMenu page={TrashPage}>{children}</PageMenu>;\n  }\n\n  if (page?.folder) {\n    return <EntriesMenu entries={[page.folder]}>{children}</EntriesMenu>;\n  }\n\n  if (entries?.length) {\n    return <EntriesMenu entries={entries}>{children}</EntriesMenu>;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  entries: DriveEntry[];\n}\nfunction EntriesMenu({entries, children}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\n  page: DrivePage;\n}\nfunction PageMenu({page, children}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\n}\n\ninterface BaseMenuProps {\n  actions: EntryAction[];\n  children: ReactElement;\n}\nfunction BaseMenu({actions, children}: BaseMenuProps) {\n  return (\n    <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n          return (\n            <MenuItem\n              onSelected={() => {\n                action.execute();\n              }}\n              key={action.key}\n              value={action.key}\n              startIcon={createElement(action.icon)}\n            >\n              <Trans {...action.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {usePaginatedEntries} from './use-paginated-entries';\n\nexport function useEntries(): DriveEntry[] {\n  const query = usePaginatedEntries();\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}\n","import {driveState, useDriveStore} from '../drive-store';\nimport {getAllEntries} from './queries/use-paginated-entries';\nimport {DriveEntry, DriveFolder} from './drive-entry';\nimport {useEntries} from './queries/use-entries';\nimport {useFolders} from './queries/use-folders';\n\nexport function useSelectedEntries(): DriveEntry[] {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids)\n    .map(id => entries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n\nexport function useSelectedEntry(): DriveEntry | null {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\n\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\n  const entry = useSelectedEntry();\n  const {data} = useFolders();\n  if (!entry || !data) return;\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\n}\n\nexport function getSelectedEntries(): DriveEntry[] {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids\n    .map(id => allEntries.find(entry => entry.id === id))\n    .filter(e => !!e) as DriveEntry[];\n}\n","import React, {createElement} from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Trans} from '@common/i18n/trans';\nimport {useSelectedEntries} from '../files/use-selected-entries';\nimport {\n  useDeleteEntriesAction,\n  usePreviewAction,\n  useRemoveSharedEntriesAction,\n  useShareAction,\n} from './use-entry-actions';\nimport {DriveEntry} from '../files/drive-entry';\nimport {EntryAction} from './entry-action';\n\ninterface EntryActionListProps {\n  className?: string;\n}\nexport function EntryActionList({className}: EntryActionListProps) {\n  const selectedEntries = useSelectedEntries();\n\n  if (!selectedEntries.length) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>\n  );\n}\n\ninterface ActionListProps {\n  entries: DriveEntry[];\n}\nfunction ActionList({entries}: ActionListProps) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n\n  const actions = [preview, share, deleteAction, removeShared].filter(\n    action => !!action\n  ) as EntryAction[];\n\n  return (\n    <div className=\"entry-action-list\">\n      {actions.map(action => (\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton\n            size=\"sm\"\n            onClick={() => {\n              action.execute();\n            }}\n          >\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>\n      ))}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>\n  );\n}\n","import {useSelectedEntries} from './use-selected-entries';\nimport {DriveEntry} from './drive-entry';\nimport {useEntryActions} from '../entry-actions/use-entry-actions';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {ContextMenu} from '@common/ui/navigation/menu/context-menu';\nimport {MenuItem} from '@common/ui/navigation/menu/menu-trigger';\nimport React, {createElement} from 'react';\nimport {Trans} from '@common/i18n/trans';\nimport {EntryAction} from '../entry-actions/entry-action';\nimport {DrivePage, RootFolderPage} from '../drive-page/drive-page';\nimport {useDrivePageActions} from '../entry-actions/use-drive-page-actions';\n\nexport function DriveContextMenu() {\n  const selectedEntries = useSelectedEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const data = useDriveStore(s => s.contextMenuData);\n  const entries = data?.entry ? [data.entry] : selectedEntries;\n\n  // right-clicked root folder\n  if (data?.entry?.id === 0) {\n    return <PageContextMenu position={data} page={RootFolderPage} />;\n  }\n\n  if (data && entries.length) {\n    return <EntriesContextMenu entries={entries} position={data} />;\n  }\n\n  if (data && activePage) {\n    return <PageContextMenu position={data} page={activePage} />;\n  }\n\n  return null;\n}\n\ninterface EntriesContextMenuProps {\n  position: {x: number; y: number};\n  entries: DriveEntry[];\n}\nfunction EntriesContextMenu({entries, position}: EntriesContextMenuProps) {\n  const actions = useEntryActions(entries);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface PageContextMenuProps {\n  position: {x: number; y: number};\n  page: DrivePage;\n}\nfunction PageContextMenu({page, position}: PageContextMenuProps) {\n  const actions = useDrivePageActions(page);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\n\ninterface BaseContextMenuProps {\n  position: {x: number; y: number};\n  actions: EntryAction[];\n}\nfunction BaseContextMenu({position, actions}: BaseContextMenuProps) {\n  return (\n    <ContextMenu\n      position={position}\n      onOpenChange={isOpen => {\n        if (!isOpen) {\n          driveState().setContextMenuData(null);\n        }\n      }}\n    >\n      {actions.map(action => (\n        <MenuItem\n          value={action.key}\n          key={action.key}\n          onSelected={action.execute}\n          startIcon={createElement(action.icon)}\n        >\n          <Trans {...action.label} />\n        </MenuItem>\n      ))}\n    </ContextMenu>\n  );\n}\n","import {useMediaQuery} from './use-media-query';\n\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}\n","import {\n  ConnectedDraggable,\n  useDraggable,\n} from '@common/ui/interactions/dnd/use-draggable';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {\n  folderAcceptsDrop,\n  useFolderDropAction,\n} from '../files/use-folder-drop-action';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport {useIsTouchDevice} from '@common/utils/hooks/is-touch-device';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {useMouseSelectable} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selectable';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\n\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\n  entry: DriveEntry\n) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef<T>(null);\n  const {onDrop} = useFolderDropAction(entry);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s =>\n    s.entriesBeingDragged.includes(entry.id)\n  );\n  const activePage = useDriveStore(s => s.activePage);\n\n  const {draggableProps} = useDraggable({\n    disabled: !!isTouchDevice || activePage === TrashPage,\n    id: entry.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries(),\n  });\n\n  const {droppableProps} = useDroppable<T>({\n    id: entry.id,\n    disabled: isTouchDevice || entry.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target => folderAcceptsDrop(target, entry),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop,\n  });\n\n  useMouseSelectable({\n    id: entry.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([entry.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([entry.id]);\n    },\n  });\n\n  const itemClassName = clsx(\n    isDragging && 'opacity-20',\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded'\n  );\n\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref,\n  };\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport {RowElementProps} from '@common/ui/tables/table-row';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, {useContext} from 'react';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {driveState} from '../../drive-store';\n\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}: RowElementProps<DriveEntry>) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLTableRowElement>(item);\n\n  return (\n    <tr\n      className={clsx(className, itemClassName, isMobileMode ? 'h-64' : null)}\n      ref={ref}\n      {...mergeProps(draggableProps, droppableProps, domProps, {\n        onContextMenu: (e: React.MouseEvent) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!isMobileMode) {\n            if (!driveState().selectedEntries.has(item.id)) {\n              driveState().selectEntries([item.id]);\n            }\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n          }\n        },\n      })}\n    >\n      {children}\n    </tr>\n  );\n}\n","import {useCallback} from 'react';\nimport {getPathForFolder, TrashPage} from '../drive-page/drive-page';\nimport {driveState} from '../drive-store';\nimport {DriveEntry} from '../files/drive-entry';\nimport {getSelectedEntries} from '../files/use-selected-entries';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n\n  const performViewItemAction = useCallback(\n    (entry: DriveEntry) => {\n      if (entry && entry.type === 'folder') {\n        if (driveState().activePage === TrashPage) {\n          driveState().setActiveActionDialog('trashFolderBlock', [entry]);\n        } else {\n          navigate(getPathForFolder(entry.hash));\n        }\n      } else {\n        const selectedEntries = getSelectedEntries();\n        driveState().setActiveActionDialog(\n          'preview',\n          selectedEntries.length ? selectedEntries : [entry]\n        );\n      }\n    },\n    [navigate]\n  );\n\n  return {performViewItemAction};\n}\n","import {ColumnConfig} from '@common/datatable/column-config';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {Trans} from '@common/i18n/trans';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport React, {useContext} from 'react';\nimport memoize from 'nano-memoize';\nimport {TableContext} from '@common/ui/tables/table-context';\n\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\n\nexport const fileTableMobileColumns: ColumnConfig<DriveEntry>[] = [\n  {\n    key: 'name',\n    allowsSorting: true,\n    hideHeader: true,\n    header: () => <Trans message=\"User\" />,\n    body: entry => (\n      <div className=\"flex items-center gap-14\">\n        <FileThumbnail\n          className=\"w-30 h-30 rounded\"\n          iconClassName=\"w-28 h-28\"\n          file={entry}\n        />\n        <div>\n          <div>{entry.name}</div>\n          <div className=\"text-muted text-xs flex items-center mt-4\">\n            <FormattedDate date={entry.updated_at} />\n            <div>·</div>\n            <div>{formatFileSize(entry.file_size)}</div>\n          </div>\n        </div>\n      </div>\n    ),\n    width: 'col-w-3',\n  },\n  {\n    key: 'actions',\n    hideHeader: true,\n    header: () => <Trans message=\"Actions\" />,\n    align: 'end',\n    padding: 'pl-12 pr-4',\n    body: entry => <ActionsBody entry={entry} />,\n  },\n];\n\ninterface ActionsBodyProps {\n  entry: DriveEntry;\n}\nfunction ActionsBody({entry}: ActionsBodyProps) {\n  const {selectedRows} = useContext(TableContext);\n  return selectedRows.length ? (\n    <Checkbox\n      className=\"block mr-8\"\n      checked={selectedRows.includes(entry.id)}\n    />\n  ) : (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\">\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {DriveEntry} from '../../files/drive-entry';\nimport React, {useMemo} from 'react';\nimport {Table} from '@common/ui/tables/table';\nimport {\n  DriveSortDescriptor,\n  driveState,\n  useDriveStore,\n} from '../../drive-store';\nimport {FileTableRow} from './file-table-row';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {fileTableColumns} from './file-table-columns';\nimport {fileTableMobileColumns} from './file-table-mobile-columns';\n\ninterface Props {\n  entries: DriveEntry[];\n}\nexport function FileTable({entries}: Props) {\n  const isMobile = useIsMobileMediaQuery();\n  const {performViewItemAction} = useViewItemActionHandler();\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n\n  const selectedRows = useMemo(() => {\n    return [...selectedEntries];\n  }, [selectedEntries]);\n\n  return (\n    <Table\n      hideHeaderRow={!!isMobile}\n      columns={isMobile ? fileTableMobileColumns : fileTableColumns}\n      data={entries}\n      sortDescriptor={sortDescriptor}\n      onSortChange={value => {\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\n      }}\n      onAction={performViewItemAction}\n      selectedRows={selectedRows}\n      selectionStyle=\"highlight\"\n      renderRowAs={FileTableRow}\n      onSelectionChange={value => {\n        driveState().selectEntries(value as number[]);\n      }}\n    />\n  );\n}\n","import React, {useContext} from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {driveState, useDriveStore} from '../../drive-store';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFileViewDnd} from '../use-file-view-dnd';\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\nimport {usePointerEvents} from '@common/ui/interactions/use-pointer-events';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {BaseFileGridItem} from './base-file-grid-item';\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\nimport {isCtrlOrShiftPressed} from '@common/utils/keybinds/is-ctrl-or-shift-pressed';\n\ninterface FileGridItemProps {\n  entry: DriveEntry;\n}\nexport function FileGridItem({entry}: FileGridItemProps) {\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\n  const {performViewItemAction} = useViewItemActionHandler();\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {draggableProps, droppableProps, itemClassName, ref} =\n    useFileViewDnd<HTMLDivElement>(entry);\n\n  const toggleEntry = () => {\n    if (isSelected) {\n      driveState().deselectEntries([entry.id]);\n    } else {\n      driveState().selectEntries([entry.id], true);\n    }\n  };\n\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\n    if (isMobileMode) {\n      if (driveState().selectedEntries.size) {\n        toggleEntry();\n      } else {\n        performViewItemAction(entry);\n      }\n    } else {\n      if (isCtrlOrShiftPressed(e)) {\n        toggleEntry();\n      } else {\n        driveState().selectEntries([entry.id]);\n      }\n    }\n  };\n\n  const {domProps: pressProps} = usePointerEvents({\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\n    onPress: pressHandler,\n  });\n\n  const keyboardHandler: React.KeyboardEventHandler = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      performViewItemAction(entry);\n    }\n  };\n\n  const contextMenuHandler: React.MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n    }\n  };\n\n  return (\n    <BaseFileGridItem\n      {...mergeProps(draggableProps, droppableProps, pressProps, {\n        onKeyDown: createEventHandler(keyboardHandler),\n      })}\n      ref={ref}\n      entry={entry}\n      isSelected={isSelected}\n      isMobileMode={!!isMobileMode}\n      tabIndex={-1}\n      onDoubleClick={e => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!isMobileMode) {\n          performViewItemAction(entry);\n        }\n      }}\n      footerAdornment={\n        isMobileMode && (\n          <FooterAdornment entry={entry} isSelected={isSelected} />\n        )\n      }\n      onContextMenu={createEventHandler(contextMenuHandler)}\n      className={itemClassName}\n    />\n  );\n}\n\ninterface FooterProps {\n  entry: DriveEntry;\n  isSelected?: boolean;\n}\nfunction FooterAdornment({entry, isSelected}: FooterProps) {\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\n\n  if (anySelected) {\n    return <Checkbox className=\"block mr-8\" checked={isSelected} />;\n  }\n\n  return (\n    <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton\n        className=\"text-muted\"\n        onPointerDown={e => {\n          e.stopPropagation();\n        }}\n      >\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>\n  );\n}\n","import {FileGridItem} from './file-grid-item';\nimport React from 'react';\nimport {DriveEntry} from '../../files/drive-entry';\n\ninterface FileGridProps {\n  entries: DriveEntry[];\n}\nexport function FileGrid({entries}: FileGridProps) {\n  return (\n    <div className=\"file-grid-container\">\n      <div className=\"file-grid\">\n        {entries.map(entry => {\n          return <FileGridItem key={entry.id} entry={entry} />;\n        })}\n      </div>\n    </div>\n  );\n}\n","import {driveState, useDriveStore} from '../../drive-store';\nimport {EntriesSortButton} from './entries-sort-button';\nimport React from 'react';\n\ninterface DriveSortButtonProps {\n  isDisabled?: boolean;\n}\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return (\n    <EntriesSortButton\n      isDisabled={isDisabled}\n      descriptor={descriptor}\n      onChange={value => {\n        driveState().setSortDescriptor(value);\n      }}\n    />\n  );\n}\n","import React, {ReactNode, useContext} from 'react';\nimport {useDriveStore} from './drive-store';\nimport {\n  DrivePage,\n  makeFolderPage,\n  RootFolderPage,\n  SharesPage,\n  TrashPage,\n} from './drive-page/drive-page';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {useAuth} from '@common/auth/use-auth';\nimport {useFolderPath} from './files/queries/use-folder-path';\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\nimport {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\nimport {ButtonBase} from '@common/ui/buttons/button-base';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\n\ninterface ItemConfig {\n  page: DrivePage;\n  label: MessageDescriptor | string;\n}\n\ninterface PageBreadcrumbsProps {\n  className?: string;\n}\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const navigate = useNavigate();\n  const page = useDriveStore(s => s.activePage);\n  const folder = page?.folder;\n  const query = useFolderPath({\n    hash: folder?.hash,\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\n  });\n  const workspace = useActiveWorkspace();\n  const rootItem = useRootItem();\n  // wait until path, folder and workspace load fully\n  const isLoading =\n    !page ||\n    !workspace ||\n    (page.isFolderPage && !folder) ||\n    query.fetchStatus !== 'idle';\n\n  let content: ReactNode;\n\n  if (isLoading) {\n    content = null;\n  } else {\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\n\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          page: makeFolderPage(parent),\n          label: parent.name,\n        });\n      });\n    }\n\n    content = (\n      <Breadcrumb\n        className={className}\n        size={isMobileMode ? 'md' : 'lg'}\n        currentIsClickable\n      >\n        {items.map((item, index) => {\n          const isLast = index === items.length - 1;\n          if (!isLast) {\n            return (\n              <BreadcrumbItem\n                key={item.page.id}\n                onSelected={() => {\n                  navigate(item.page.path);\n                }}\n              >\n                <MixedText value={item.label} />\n              </BreadcrumbItem>\n            );\n          }\n\n          return (\n            <BreadcrumbItem key={item.page.id}>\n              {({isMenuItem}) => {\n                if (\n                  isMenuItem ||\n                  (!item.page.folder && item.page !== TrashPage)\n                )\n                  return <MixedText value={item.label} />;\n                return (\n                  <EntryActionMenuTrigger page={item.page}>\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\n                      <MixedText value={item.label} />\n                      <ArrowDropDownIcon className=\"icon-md text-muted\" />\n                    </ButtonBase>\n                  </EntryActionMenuTrigger>\n                );\n              }}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    );\n  }\n\n  return content;\n}\n\nfunction useRootItem(): ItemConfig | null {\n  const page = useDriveStore(s => s.activePage);\n  const workspace = useActiveWorkspace();\n  const {user} = useAuth();\n\n  if (!page) return null;\n\n  // in workspace\n  if (workspace && !workspace.default) {\n    if (\n      page?.isFolderPage &&\n      (page?.id === RootFolderPage.id ||\n        page.folder?.workspace_id === workspace.id)\n    ) {\n      return {label: workspace.name, page: RootFolderPage};\n    }\n  }\n\n  if (page?.isFolderPage) {\n    const owner = page.folder?.users.find(u => u.owns_entry);\n    // inside shared folder\n    if (owner?.id !== user?.id) {\n      return {label: SharesPage.label, page: SharesPage};\n    }\n    // if folder is currently active, root item will always be root folder page\n    return {label: RootFolderPage.label, page: RootFolderPage};\n  }\n\n  // if folder page is not active, we are already at the root\n  return {label: page.label, page};\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {ProgressCircle} from '../progress/progress-circle';\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\nimport {opacityAnimation} from '../animation/opacity-animation';\nimport clsx from 'clsx';\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\n\nexport interface InfiniteScrollSentinelProps {\n  marginTop?: string;\n  children?: ReactNode;\n  renderSentinelAs?: string;\n  query: UseInfiniteQueryResult;\n}\nexport function InfiniteScrollSentinel({\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\n  children,\n  marginTop = 'mt-24',\n  renderSentinelAs = 'span',\n}: InfiniteScrollSentinelProps) {\n  const sentinelRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (\n        entry.isIntersecting &&\n        hasNextPage &&\n        !isFetchingNextPage &&\n        !isInitialLoading\n      ) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isFetchingNextPage, isInitialLoading]);\n\n  // children might already be wrapper in AnimatePresence, nested\n  // it will cause issues, so only wrap default loader with it\n  const content = children ? (\n    isFetchingNextPage ? (\n      children\n    ) : null\n  ) : (\n    <AnimatePresence>\n      {isFetchingNextPage && (\n        <m.div\n          className={clsx('flex justify-center w-full', marginTop)}\n          {...opacityAnimation}\n        >\n          <ProgressCircle isIndeterminate aria-label=\"loading\" />\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n\n  const Sentinel = renderSentinelAs as any;\n  return (\n    <Fragment>\n      <Sentinel ref={sentinelRef} aria-hidden />\n      {content}\n    </Fragment>\n  );\n}\n","import {AnimatePresence, m} from 'framer-motion';\nimport {Trans} from '@common/i18n/trans';\nimport React from 'react';\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\n\ninterface DropTargetMaskProps {\n  isVisible: boolean;\n}\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\n  const mask = (\n    <m.div\n      key=\"dragTargetMask\"\n      {...opacityAnimation}\n      transition={{duration: 0.3}}\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\n    >\n      <m.div\n        initial={{y: '100%', opacity: 0}}\n        animate={{y: '-10px', opacity: 1}}\n        exit={{y: '100%', opacity: 0}}\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\n      >\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>\n  );\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}\n","import React, {\n  KeyboardEventHandler,\n  MouseEventHandler,\n  ReactNode,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {SearchFilterList} from '../search/search-filter-list';\nimport {Trans} from '@common/i18n/trans';\nimport {useMouseSelectionBox} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\nimport {mergeProps} from '@react-aria/utils';\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {DriveContextMenu} from '../files/drive-context-menu';\nimport {FileTable} from './file-table/file-table';\nimport {FileGrid} from './file-grid/file-grid';\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport {useEntries} from '../files/queries/use-entries';\nimport {AdHost} from '@common/admin/ads/ad-host';\nimport {DropTargetMask} from '../drop-target-mask';\nimport {useSearchParams} from 'react-router-dom';\nimport clsx from 'clsx';\nimport {MixedDraggable} from '@common/ui/interactions/dnd/use-draggable';\nimport {isCtrlKeyPressed} from '@common/utils/keybinds/is-ctrl-key-pressed';\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\nimport {getSelectedEntries} from '@app/drive/files/use-selected-entries';\n\ninterface FileViewProps {\n  className?: string;\n}\nexport function FileView({className}: FileViewProps) {\n  const [params] = useSearchParams();\n  const isSearchingOrFiltering =\n    !!params.get('query') || !!params.get('filters');\n  const containerRef = useRef<HTMLDivElement>(null);\n  const query = usePaginatedEntries();\n  const entries = useEntries();\n  const {uploadFiles} = useDriveUploadQueue();\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const viewMode = useDriveStore(s => s.viewMode);\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n\n  const {containerProps, boxProps} = useMouseSelectionBox({\n    containerRef,\n    onPointerDown: e => {\n      if (!(e.target as HTMLElement).closest('.entry-action-list')) {\n        driveState().deselectEntries('all');\n      }\n    },\n  });\n\n  const {droppableProps} = useDroppable({\n    id: 'driveRoot',\n    ref: containerRef,\n    types: ['nativeFile'],\n    disabled: !activePage?.canUpload,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: async (draggable: MixedDraggable) => {\n      if (draggable.type === 'nativeFile') {\n        uploadFiles(await draggable.getData());\n      }\n    },\n  });\n\n  if (!activePage) return null;\n\n  let content: ReactNode;\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\n    const noContentMessage = activePage.noContentMessage(\n      isSearchingOrFiltering\n    );\n    content = (\n      <IllustratedMessage\n        className=\"mt-40\"\n        image={<SvgImage src={noContentMessage.image} />}\n        title={<Trans {...noContentMessage.title} />}\n        description={<Trans {...noContentMessage.description} />}\n      />\n    );\n  } else if (!query.isLoading) {\n    content =\n      viewMode === 'list' ? (\n        <FileTable entries={entries} />\n      ) : (\n        <FileGrid entries={entries} />\n      );\n  }\n\n  const handleContextMenu: MouseEventHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({x: e.clientX, y: e.clientY});\n  };\n\n  const handleKeybinds: KeyboardEventHandler = e => {\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      driveState().selectEntries(entries.map(entry => entry.id));\n    }\n    if (e.key === 'Delete') {\n      e.preventDefault();\n      e.stopPropagation();\n      if (driveState().selectedEntries.size && !deleteEntries.isLoading) {\n        if (activePage === TrashPage) {\n          driveState().setActiveActionDialog(\n            'confirmAndDeleteForever',\n            getSelectedEntries()\n          );\n        } else {\n          deleteEntries.mutate({\n            entryIds: [...driveState().selectedEntries],\n            deleteForever: activePage === TrashPage,\n          });\n          driveState().selectEntries([]);\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx('relative outline-none', className)}\n      tabIndex={-1}\n      {...mergeProps(containerProps, droppableProps, {\n        onKeyDown: createEventHandler(handleKeybinds),\n      })}\n      onContextMenu={handleContextMenu}\n    >\n      <div className=\"flex flex-col relative pt-10 min-h-full\">\n        {isMobileMode ? (\n          <PageBreadcrumbs className=\"px-14 mb-10\" />\n        ) : (\n          <Toolbar />\n        )}\n        <SearchFilterList />\n        <div className=\"px-18 md:px-24 pb-18 flex-auto relative\">\n          <AdHost slot=\"drive\" className=\"mb-24\" />\n          {content}\n          <InfiniteScrollSentinel query={query} />\n        </div>\n        <div\n          {...boxProps}\n          className=\"absolute bg-primary-light/20 border border-primary-light z-10 pointer-events-none shadow-md left-0 top-0 hidden\"\n        />\n        <DriveContextMenu />\n        <DropTargetMask isVisible={isDragOver} />\n      </div>\n    </div>\n  );\n}\n\nfunction Toolbar() {\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <div className=\"px-10 md:px-18 my-10 flex items-center gap-40 justify-between text-muted min-h-42\">\n      <DriveSortButton isDisabled={activePage?.disableSort} />\n      <EntryActionList className=\"text-muted\" />\n    </div>\n  );\n}\n","import {\n  ComponentPropsWithoutRef,\n  CSSProperties,\n  memo,\n  ReactElement,\n  useMemo,\n  useState,\n} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\nimport {UploadedFile} from '@common/uploads/uploaded-file';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {MixedText} from '@common/i18n/mixed-text';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {ErrorIcon} from '@common/icons/material/Error';\nimport {WarningIcon} from '@common/icons/material/Warning';\nimport {message} from '@common/i18n/message';\n\ninterface UploadQueueProps {\n  file: UploadedFile;\n  style: CSSProperties;\n}\nexport const UploadQueueItem = memo(({file, style}: UploadQueueProps) => {\n  return (\n    <div\n      className=\"p-10 flex items-center gap-14 w-full absolute top-0 left-0\"\n      style={style}\n    >\n      <div className=\"shrink-0 border rounded p-8\">\n        <FileTypeIcon className=\"w-22 h-22\" mime={file.mime} />\n      </div>\n      <div className=\"flex-auto min-w-0 pr-10\">\n        <div className=\"mb-2 flex items-center min-w-0 gap-10\">\n          <div className=\"flex-auto font-medium whitespace-nowrap min-w-0 overflow-hidden overflow-ellipsis\">\n            {file.name}\n          </div>\n        </div>\n        <SizeInfo file={file} />\n      </div>\n      <div className=\"mr-10\">\n        <FileStatus file={file} />\n      </div>\n    </div>\n  );\n});\n\ninterface SizeInfoProps {\n  file: UploadedFile;\n}\nfunction SizeInfo({file}: SizeInfoProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\n\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\n  const uploadedBytes = useMemo(\n    () => prettyBytes(bytesUploaded),\n    [bytesUploaded]\n  );\n\n  let statusMessage: ReactElement;\n  if (fileUpload?.status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (fileUpload?.status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (fileUpload?.status === 'failed') {\n    statusMessage = <Trans message=\"Upload failed\" />;\n  } else {\n    statusMessage = (\n      <Trans\n        message=\":bytesUploaded of :totalBytes\"\n        values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes,\n        }}\n      />\n    );\n  }\n\n  return <div className=\"text-muted text-xs\">{statusMessage}</div>;\n}\n\ninterface FileStatusProps {\n  file: UploadedFile;\n}\nfunction FileStatus({file}: FileStatusProps) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const percentage = fileUpload?.percentage || 0;\n  const status = fileUpload?.status;\n  const errorMessage = fileUpload?.errorMessage;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const abortButton = (\n    <IconButton\n      size=\"sm\"\n      onClick={() => {\n        abortUpload(file.id);\n      }}\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n\n  const progressButton = (\n    <ProgressCircle aria-label=\"Upload progress\" size=\"sm\" value={percentage} />\n  );\n\n  let statusButton: ReactElement;\n  if (status === 'failed') {\n    const errMessage =\n      errorMessage || message('This file could not be uploaded');\n    statusButton = (\n      <AnimatedStatus>\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\n        </Tooltip>\n      </AnimatedStatus>\n    );\n  } else if (status === 'aborted') {\n    statusButton = (\n      <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"md\" />\n      </AnimatedStatus>\n    );\n  } else if (status === 'completed') {\n    statusButton = (\n      <AnimatedStatus>\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\n      </AnimatedStatus>\n    );\n  } else {\n    statusButton = (\n      <AnimatedStatus\n        onPointerEnter={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(true);\n          }\n        }}\n        onPointerLeave={e => {\n          if (e.pointerType === 'mouse') {\n            setIsHovered(false);\n          }\n        }}\n      >\n        {isHovered ? abortButton : progressButton}\n      </AnimatedStatus>\n    );\n  }\n\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\n\ninterface AnimatedStatusProps\n  extends Omit<\n    ComponentPropsWithoutRef<'div'>,\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\n  > {\n  children: ReactElement;\n}\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\n  return (\n    <m.div\n      {...domProps}\n      initial={{scale: 0, opacity: 0}}\n      animate={{scale: 1, opacity: 1}}\n      exit={{scale: 0, opacity: 0}}\n    >\n      {children}\n    </m.div>\n  );\n}\n","import {ReactElement, useRef} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\nimport {Trans} from '@common/i18n/trans';\nimport {UploadQueueItem} from './upload-queue-item';\nimport {useVirtualizer} from '@tanstack/react-virtual';\n\nexport function UploadQueue() {\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <m.div\n          key=\"upload-queue\"\n          className=\"shadow-xl rounded fixed bottom-16 right-16 bg z-modal border w-375 text-sm\"\n          initial={{y: '100%', opacity: 0}}\n          animate={{y: 0, opacity: 1}}\n          exit={{y: '100%', opacity: 0}}\n        >\n          <Header />\n          <UploadList />\n        </m.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport function Header() {\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\n  const completedUploadsCount = useFileUploadStore(\n    s => s.completedUploadsCount\n  );\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n\n  let message: ReactElement;\n  if (inProgressUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploading :count files\"\n        values={{count: inProgressUploadsCount}}\n      />\n    );\n  } else if (completedUploadsCount) {\n    message = (\n      <Trans\n        message=\"Uploaded :count files\"\n        values={{count: completedUploadsCount}}\n      />\n    );\n  } else {\n    message = <Trans message=\"No active uploads\" />;\n  }\n\n  // only allow closing upload queue if there are no active uploads\n  return (\n    <div className=\"px-10 py-4 bg-alt flex items-center gap-10 justify-between border-b min-h-[45px]\">\n      {message}\n      {inProgressUploadsCount === 0 ? (\n        <IconButton\n          size=\"sm\"\n          onClick={() => {\n            driveState().setUploadQueueIsOpen(false);\n            // wait for upload queue panel animation to complete, then clear inactive uploads\n            setTimeout(() => {\n              clearInactive();\n            }, 200);\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : undefined}\n    </div>\n  );\n}\n\nfunction UploadList() {\n  const uploads = useFileUploadStore(s => s.fileUploads);\n  const uploadsArray = [...uploads.values()];\n  const ref = useRef<HTMLDivElement>(null);\n  const virtualizer = useVirtualizer({\n    count: uploads.size,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 60,\n    overscan: 4,\n  });\n\n  return (\n    <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\n      <div\n        className=\"relative w-full\"\n        style={{\n          height: `${virtualizer.getTotalSize()}px`,\n        }}\n      >\n        {virtualizer.getVirtualItems().map(virtualItem => {\n          const upload = uploadsArray[virtualItem.index];\n          return (\n            <UploadQueueItem\n              style={{\n                height: `${virtualItem.size}px`,\n                transform: `translateY(${virtualItem.start}px)`,\n              }}\n              key={upload.file.id}\n              file={upload.file}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__33c85772__\"","import React, {ReactNode, useContext} from 'react';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\n\ninterface HeaderProps {\n  entryType: string;\n  entryName: ReactNode;\n}\nexport function DetailsSidebarHeader({entryType, entryName}: HeaderProps) {\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\n  return (\n    <div className=\"flex items-center gap-16 text-text-main mb-38\">\n      <FileTypeIcon className=\"w-24 h-24\" type={entryType} />\n      <div className=\"text-xl font-normal text-ellipsis flex-auto mr-auto min-w-0 break-words\">\n        {entryName}\n      </div>\n      <IconButton\n        size=\"md\"\n        className=\"flex-shrink-0\"\n        onClick={() => {\n          setRightSidenavStatus('closed');\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport clsx from 'clsx';\n\ninterface Props {\n  children: ReactNode;\n  margin?: string;\n}\nexport function DetailsSidebarSectionHeader({\n  children,\n  margin = 'mb-20',\n}: Props) {\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\n}\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {useMutation} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\nimport {message} from '@common/i18n/message';\nimport {ChipValue} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {invalidateEntryQueries} from '@app/drive/drive-query-keys';\n\ninterface Response extends BackendResponse {\n  //\n}\n\ninterface Payload {\n  entry: DriveEntry;\n  tags: ChipValue[];\n}\n\nexport function useSyncEntryTags() {\n  return useMutation((props: Payload) => createComment(props), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => showHttpErrorToast(err, message('Failed to save tags.')),\n  });\n}\n\nfunction createComment({entry, tags}: Payload): Promise<Response> {\n  return apiClient\n    .post(`file-entries/${entry.id}/sync-tags`, {\n      tags: tags.map(tag => tag.name),\n    })\n    .then(r => r.data);\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\n\ninterface Response extends BackendResponse {\n  results: NormalizedModel[];\n}\n\nexport function useFileEntryTags(query?: string) {\n  return useQuery(['file-entry-tags', query], () => fetchTags(query), {\n    keepPreviousData: true,\n  });\n}\n\nasync function fetchTags(query?: string) {\n  return apiClient\n    .get<Response>('file-entry-tags', {params: {query}})\n    .then(r => r.data);\n}\n","import {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {\n  ChipField,\n  ChipValue,\n} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport React, {useState} from 'react';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {message} from '@common/i18n/message';\nimport {useSyncEntryTags} from '@app/drive/details-sidebar/requests/use-sync-entry-tags';\nimport {useFileEntryTags} from '@app/drive/details-sidebar/requests/use-file-entry-tags';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\n\ninterface Props {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarTags({entry}: Props) {\n  // use key={entry.id} to force re-render tag chip field when entry changes\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\n        <Trans message=\"Tags\" />\n      </DetailsSidebarSectionHeader>\n      <TagChipField entry={entry} key={entry.id} />\n    </div>\n  );\n}\n\nfunction TagChipField({entry}: Props) {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const syncTags = useSyncEntryTags();\n  const [inputValue, setInputValue] = useState('');\n  const [value, setValue] = useState<ChipValue[]>(entry.tags || []);\n  const {data, isLoading} = useFileEntryTags(inputValue);\n\n  const handleChange = (newTags: ChipValue[]) => {\n    setValue(newTags);\n    if (!syncTags.isLoading) {\n      syncTags.mutate({tags: newTags, entry});\n    }\n  };\n\n  return (\n    <ChipField\n      isAsync\n      inputValue={inputValue}\n      onInputValueChange={setInputValue}\n      suggestions={data?.results}\n      placeholder={trans(message('+Add tag'))}\n      isLoading={isLoading}\n      chipSize=\"sm\"\n      value={value}\n      onChange={handleChange}\n      onChipClick={chip => {\n        navigate(`/drive/search?query=${chip.name}`);\n      }}\n    >\n      {data?.results.map(result => (\n        <Item value={result} key={result.id}>\n          {result.name}\n        </Item>\n      ))}\n    </ChipField>\n  );\n}\n","import {useSelectedEntryParent} from '@app/drive/files/use-selected-entries';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport React, {ReactNode, useMemo} from 'react';\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\nimport {Trans} from '@common/i18n/trans';\nimport {Button} from '@common/ui/buttons/button';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {\n  getPathForFolder,\n  RootFolderPage,\n} from '@app/drive/drive-page/drive-page';\nimport {FormattedDate} from '@common/i18n/formatted-date';\nimport {DriveEntry} from '@app/drive/files/drive-entry';\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\nimport {GroupsIcon} from '@common/icons/material/Groups';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {driveState} from '@app/drive/drive-store';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport {DetailsSidebarTags} from '@app/drive/details-sidebar/details-sidebar-tags';\n\ninterface EntryPropertiesProps {\n  entry: DriveEntry;\n}\nexport function DetailsSidebarProperties({entry}: EntryPropertiesProps) {\n  return (\n    <div>\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\n      {entry.type === 'image' && (\n        <FileThumbnail className=\"mb-20\" file={entry} />\n      )}\n      <div>\n        <DetailsSidebarSectionHeader>\n          <Trans message=\"Who has access\" />\n        </DetailsSidebarSectionHeader>\n        <div className=\"flex items-center gap-14\">\n          {entry.workspace_id ? (\n            <div className=\"rounded-full border w-32 h-32 flex items-center justify-center\">\n              <GroupsIcon className=\"icon-md\" />\n            </div>\n          ) : null}\n          {entry.users.map(user => (\n            <Tooltip label={user.display_name} key={user.id}>\n              <Avatar src={user.avatar} size=\"md\" circle />\n            </Tooltip>\n          ))}\n        </div>\n        {entry.permissions['files.update'] && (\n          <Button\n            className=\"block mt-20\"\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              driveState().setActiveActionDialog('share', [entry]);\n            }}\n          >\n            <Trans message=\"Manage Access\" />\n          </Button>\n        )}\n      </div>\n      <PropertyList entry={entry} />\n      <DetailsSidebarTags entry={entry} />\n    </div>\n  );\n}\n\ninterface Props {\n  entry: DriveEntry;\n}\nfunction PropertyList({entry}: Props) {\n  const parent = useSelectedEntryParent();\n  const navigate = useNavigate();\n  const owner = entry.users.find(user => user.owns_entry);\n  const prettySize = useMemo(\n    () => prettyBytes(entry.file_size),\n    [entry.file_size]\n  );\n\n  return (\n    <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader>\n        <Trans message=\"Properties\" />\n      </DetailsSidebarSectionHeader>\n      <PropertyItem\n        label={<Trans message=\"Type\" />}\n        value={\n          <span className=\"capitalize\">\n            <Trans message={entry.type} />\n          </span>\n        }\n      />\n      <PropertyItem\n        label={<Trans message=\"Size\" />}\n        value={entry.file_size ? prettySize : '-'}\n      />\n      <PropertyItem\n        label={<Trans message=\"Location\" />}\n        value={\n          <Button\n            variant=\"link\"\n            startIcon={<FolderIcon />}\n            onClick={() => {\n              navigate(\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path\n              );\n            }}\n          >\n            {parent ? parent.name : <Trans message=\"Root\" />}\n          </Button>\n        }\n      />\n      {owner && (\n        <PropertyItem\n          label={<Trans message=\"Owner\" />}\n          value={owner.display_name}\n        />\n      )}\n      <PropertyItem\n        label={<Trans message=\"Modified\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n      <PropertyItem\n        label={<Trans message=\"Created\" />}\n        value={<FormattedDate date={entry.updated_at} />}\n      />\n    </div>\n  );\n}\n\ninterface PropertyItemProps {\n  label: ReactNode;\n  value: ReactNode;\n}\nfunction PropertyItem({label, value}: PropertyItemProps) {\n  return (\n    <div className=\"flex items-center mb-14\">\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\n    </div>\n  );\n}\n","import React, {Fragment} from 'react';\nimport {useSelectedEntry} from '../files/use-selected-entries';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {Trans} from '@common/i18n/trans';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\nimport {DetailsSidebarProperties} from '@app/drive/details-sidebar/details-sidebar-properties';\n\ninterface DetailsSidebarProps {\n  className?: string;\n}\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\n  const selectedEntry = useSelectedEntry();\n  return (\n    <div\n      className={clsx(\n        className,\n        'bg p-18 text-sm text-muted border-l h-full overflow-y-auto'\n      )}\n    >\n      {selectedEntry ? (\n        <DetailsSidebarProperties entry={selectedEntry} />\n      ) : (\n        <NothingSelected />\n      )}\n    </div>\n  );\n}\n\nfunction NothingSelected() {\n  return (\n    <Fragment>\n      <DetailsSidebarHeader\n        entryType=\"folder\"\n        entryName={<Trans message=\"All files\" />}\n      />\n      <IllustratedMessage\n        image={<SvgImage src={detailedExamination} />}\n        description={\n          <Trans message=\"Select file or folder to see details here\" />\n        }\n      />\n    </Fragment>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\n\ninterface Response extends BackendResponse {\n  fileEntry: FileEntry;\n}\n\ninterface Payload {\n  entryId: number;\n  name: string;\n  initialName: string;\n}\n\nexport function useRenameEntry(form: UseFormReturn<any>) {\n  return useMutation((payload: Payload) => renameEntry(payload), {\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(\n        message(':oldName renamed to :newName', {\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\n        })\n      );\n    },\n    onError: err => onFormQueryError(err, form),\n  });\n}\n\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\n  return apiClient\n    .put(`file-entries/${entryId}`, payload)\n    .then(response => response.data);\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useRenameEntry} from '../queries/use-rename-entry';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {Form} from '@common/ui/forms/form';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../drive-entry';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface RenameEntryDialogProps {\n  entries: DriveEntry[];\n}\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\n  const {close, formId} = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({defaultValues: {name: initialName}});\n  const renameEntry = useRenameEntry(form);\n\n  const onSubmit = (e: Required<FormValue>) => {\n    renameEntry.mutate(\n      {\n        entryId: entries[0].id,\n        name: e.name,\n        initialName,\n      },\n      {onSuccess: close}\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder=\"Enter a name...\"\n            aria-label=\"Entry name\"\n            autoFocus\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={renameEntry.isLoading || !form.formState.isDirty}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient} from '@common/http/query-client';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveFolder} from '../drive-entry';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\n\ninterface Response extends BackendResponse {\n  folder: DriveFolder;\n}\n\ninterface CreateFolderProps {\n  name: string;\n  parentId?: number | null;\n}\n\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\n  return apiClient\n    .post('folders', {\n      name,\n      parentId: parentId === 0 ? null : parentId,\n    })\n    .then(response => response.data);\n}\n\nexport function useCreateFolder(form: UseFormReturn<any>) {\n  return useMutation(\n    ({name, parentId}: CreateFolderProps) => {\n      return createFolder({name, parentId});\n    },\n    {\n      onSuccess: () => invalidateEntryQueries(),\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {Button} from '@common/ui/buttons/button';\nimport {toast} from '@common/ui/toast/toast';\nimport {Form} from '@common/ui/forms/form';\nimport {useCreateFolder} from '../queries/create-folder';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {message} from '@common/i18n/message';\nimport {useTrans} from '@common/i18n/use-trans';\n\ninterface FormValue {\n  name?: string;\n}\n\ninterface NewFolderDialogProps {\n  parentId: number;\n}\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\n  const {close, formId} = useDialogContext();\n  const {trans} = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({message: 'Untitled Folder'}),\n    },\n  });\n  const createFolder = useCreateFolder(form);\n\n  const onSubmit = (value: Required<FormValue>) => {\n    createFolder.mutate(\n      {...value, parentId},\n      {\n        onSuccess: response => {\n          close(response.folder);\n          toast(message('Folder created'));\n        },\n      }\n    );\n  };\n\n  return (\n    <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField\n            placeholder={trans({\n              message: 'Enter a name...',\n            })}\n            aria-label=\"Entry name\"\n            autoFocus\n            autoSelectText\n            name=\"name\"\n            required\n            minLength={3}\n            maxLength={200}\n          />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          form={formId}\n          type=\"submit\"\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={createFolder.isLoading}\n        >\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n}\n","import {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\nimport {DriveEntry} from '../drive-entry';\nimport {createElement, useState} from 'react';\nimport {useShareAction} from '../../entry-actions/use-entry-actions';\nimport {Button} from '@common/ui/buttons/button';\nimport {Trans} from '@common/i18n/trans';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {useEntries} from '../queries/use-entries';\n\ninterface EntryPreviewDialogProps {\n  selectedEntry: DriveEntry;\n}\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(\n    file => file.id === selectedEntry?.id\n  );\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return (\n    <FilePreviewDialog\n      allowDownload={selectedEntry.permissions['files.download']}\n      headerActionsLeft={\n        <DriveActions activeIndex={activeIndex} entries={files} />\n      }\n      activeIndex={activeIndex}\n      onActiveIndexChange={setActiveIndex}\n      entries={files}\n    />\n  );\n}\n\ninterface DriveActionsProps {\n  activeIndex: number;\n  entries: DriveEntry[];\n}\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  const isMobile = useIsMobileMediaQuery();\n  if (!selectedEntry || !share) return null;\n\n  if (isMobile) {\n    return (\n      <IconButton\n        onClick={() => {\n          share.execute();\n        }}\n      >\n        {createElement(share.icon)}\n      </IconButton>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"text\"\n      startIcon={createElement(share.icon)}\n      onClick={() => {\n        share.execute();\n      }}\n    >\n      <Trans {...share.label} />\n    </Button>\n  );\n}\n","import axios from 'axios';\nimport {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nexport interface ShareEntryPayload {\n  emails: string[];\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nfunction shareEntry({\n  entryId,\n  ...payload\n}: ShareEntryPayload): Promise<BackendResponse> {\n  return apiClient\n    .post(`file-entries/${entryId}/share`, payload)\n    .then(response => response.data);\n}\n\nexport function useShareEntry() {\n  return useMutation((payload: ShareEntryPayload) => shareEntry(payload), {\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data as BackendErrorResponse;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    },\n  });\n}\n","import {FileEntry} from '@common/uploads/file-entry';\n\nexport interface DriveEntry extends FileEntry {\n  users: DriveEntryUser[];\n  workspace_id?: number;\n  permissions: {\n    'files.update': boolean;\n    'files.delete': boolean;\n    'files.download': boolean;\n  };\n}\n\nexport interface DriveFolder extends DriveEntry {\n  type: 'folder';\n  model_type?: string;\n}\n\nexport interface DriveEntryUser {\n  id: number;\n  email: string;\n  display_name: string;\n  avatar?: string;\n  owns_entry: boolean;\n  entry_permissions: DriveEntryPermissions;\n}\n\nexport interface DriveEntryPermissions {\n  edit?: boolean;\n  view?: boolean;\n  download?: boolean;\n}\n\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\n  edit: true,\n  view: true,\n  download: true,\n};\n","import {Button} from '@common/ui/buttons/button';\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\nimport {\n  DRIVE_ENTRY_FULL_PERMISSIONS,\n  DriveEntryPermissions,\n  DriveEntryUser,\n} from '../files/drive-entry';\nimport {\n  Menu,\n  MenuItem,\n  MenuTrigger,\n} from '@common/ui/navigation/menu/menu-trigger';\nimport {message} from '@common/i18n/message';\nimport {Trans} from '@common/i18n/trans';\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\n\nexport interface PermissionSelectorItem {\n  key: keyof DriveEntryPermissions;\n  value: DriveEntryPermissions;\n  label: MessageDescriptor;\n}\n\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\n  {\n    key: 'view',\n    value: {view: true},\n    label: message('Can view'),\n  },\n  {\n    key: 'download',\n    value: {view: true, download: true},\n    label: message('Can Download'),\n  },\n  {\n    key: 'edit',\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\n    label: message('Can edit'),\n  },\n];\n\ninterface Props {\n  onChange: (value: PermissionSelectorItem) => void;\n  value: PermissionSelectorItem;\n}\nexport function PermissionSelector({value, onChange}: Props) {\n  return (\n    <MenuTrigger\n      selectedValue={value.key}\n      selectionMode=\"single\"\n      onSelectionChange={key => {\n        if (key !== value.key) {\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\n        }\n      }}\n    >\n      <Button\n        variant=\"flat\"\n        color=\"chip\"\n        size=\"xs\"\n        endIcon={<ArrowDropDownIcon />}\n      >\n        <Trans {...value.label} />\n      </Button>\n      <Menu>\n        {PermissionSelectorItems.map(item => {\n          return (\n            <MenuItem key={item.key} value={item.key}>\n              <Trans {...item.label} />\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </MenuTrigger>\n  );\n}\n\nexport function getPermissionItemForUser(\n  user: DriveEntryUser\n): PermissionSelectorItem {\n  const {download, edit} = user.entry_permissions;\n  if (edit) {\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\n  }\n  if (download) {\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\n  }\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {DriveEntryPermissions} from '../../files/drive-entry';\nimport {apiClient} from '@common/http/query-client';\nimport {toast} from '@common/ui/toast/toast';\nimport {invalidateEntryQueries} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\nexport interface ChangePermissionsPayload {\n  userId: number;\n  permissions: DriveEntryPermissions;\n  entryId: number;\n}\n\nexport function useChangePermission() {\n  return useMutation(\n    (payload: ChangePermissionsPayload) => changePermission(payload),\n    {\n      onSuccess: () => {\n        invalidateEntryQueries();\n        toast(message('Updated user permissions'));\n      },\n      onError: err =>\n        showHttpErrorToast(err, message('Could not update permissions')),\n    }\n  );\n}\n\nfunction changePermission({\n  entryId,\n  ...payload\n}: ChangePermissionsPayload): Promise<BackendResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/change-permissions`, payload)\n    .then(response => response.data);\n}\n","import {useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\nimport {\n  getPermissionItemForUser,\n  PermissionSelector,\n  PermissionSelectorItem,\n} from './permission-selector';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {useChangePermission} from './queries/use-change-permission';\nimport {useUnshareEntries} from './queries/use-unshare-entries';\nimport {Trans} from '@common/i18n/trans';\nimport {toast} from '@common/ui/toast/toast';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface MemberListProps {\n  className?: string;\n  entry: DriveEntry;\n}\n\nexport function MemberList({className, entry}: MemberListProps) {\n  if (!entry) return null;\n\n  const users = entry.users;\n\n  return (\n    <div className={clsx(className, 'overflow-hidden')}>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Who has access\" />\n      </div>\n      <AnimatePresence initial={false}>\n        {users.map(user => {\n          return <MemberListItem key={user.id} user={user} entry={entry} />;\n        })}\n      </AnimatePresence>\n    </div>\n  );\n}\n\ninterface MemberListItemProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction MemberListItem({user, entry}: MemberListItemProps) {\n  return (\n    <m.div\n      initial={{x: '-100%', opacity: 0}}\n      animate={{x: 0, opacity: 1}}\n      exit={{x: '100%', opacity: 0}}\n      transition={{type: 'tween', duration: 0.125}}\n      className=\"flex items-center text-sm gap-14 mb-20\"\n      key={user.id}\n    >\n      <img\n        src={user.avatar}\n        className=\"rounded-full w-44 h-44 flex-shrink-0\"\n        alt=\"\"\n      />\n      <div>\n        <div>{user.display_name}</div>\n        <div className=\"text-muted\">{user.email}</div>\n      </div>\n      <div className=\"ml-auto\">\n        {user.owns_entry ? (\n          <span className=\"text-muted\">\n            <Trans message=\"Owner\" />\n          </span>\n        ) : (\n          <ActionButtons user={user} entry={entry} />\n        )}\n      </div>\n    </m.div>\n  );\n}\n\ninterface ActionButtonsProps {\n  user: DriveEntryUser;\n  entry: DriveEntry;\n}\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\n  const changePermissions = useChangePermission();\n  const unshareEntry = useUnshareEntries();\n  const [activePermission, setActivePermission] =\n    useState<PermissionSelectorItem>(() => {\n      return getPermissionItemForUser(user);\n    });\n\n  return (\n    <div className=\"flex items-center gap-10\">\n      <PermissionSelector\n        onChange={item => {\n          changePermissions.mutate({\n            userId: user.id,\n            permissions: item.value,\n            entryId: entry.id,\n          });\n          setActivePermission(item);\n        }}\n        value={activePermission}\n      />\n      <IconButton\n        onClick={() => {\n          unshareEntry.mutate(\n            {userId: user.id, entryIds: [entry.id]},\n            {\n              onSuccess: () => {\n                toast(message('Member removed'));\n              },\n              onError: err =>\n                showHttpErrorToast(err, message('Could not remove member')),\n            }\n          );\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import {useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {useShareEntry} from './queries/use-share-entry';\nimport {\n  PermissionSelector,\n  PermissionSelectorItem,\n  PermissionSelectorItems,\n} from './permission-selector';\nimport {MemberList} from './member-list';\nimport {\n  ChipField,\n  ChipValue,\n} from '@common/ui/forms/input-field/chip-field/chip-field';\nimport {Avatar} from '@common/ui/images/avatar';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {isEmail} from '@common/utils/string/is-email';\nimport {USER_MODEL} from '@common/auth/user';\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface SharePanelProps {\n  className?: string;\n  entry: DriveEntry;\n}\nexport function SharePanel({className, entry}: SharePanelProps) {\n  const {trans} = useTrans();\n  const {share} = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState<ChipValue[]>([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] =\n    useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels(\n    USER_MODEL,\n    {perPage: 7, query: inputValue},\n    {enabled: share.suggest_emails}\n  );\n\n  // show user's email, instead of name in the chip\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\n\n  return (\n    <div className={className}>\n      <ChipField\n        value={chips}\n        onChange={setChips}\n        isAsync\n        isLoading={query.fetchStatus === 'fetching'}\n        inputValue={inputValue}\n        onInputValueChange={setInputValue}\n        suggestions={query.data?.results}\n        displayWith={displayWith}\n        validateWith={chip => {\n          const invalid = !isEmail(chip.description);\n          return {\n            ...chip,\n            invalid,\n            errorMessage: invalid\n              ? trans({message: 'Not a valid email'})\n              : undefined,\n          };\n        }}\n        placeholder={trans({message: 'Enter email addresses'})}\n        label={<Trans message=\"Invite people\" />}\n      >\n        {user => (\n          <Item\n            value={user.id}\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\n            description={user.description}\n          >\n            {user.name}\n          </Item>\n        )}\n      </ChipField>\n      <div className=\"flex items-center gap-14 justify-between mt-14\">\n        <PermissionSelector\n          onChange={setSelectedPermission}\n          value={selectedPermission}\n        />\n        {chips.length ? (\n          <Button\n            variant=\"flat\"\n            color=\"primary\"\n            size=\"sm\"\n            disabled={isSharing || !allEmailsValid}\n            onClick={() => {\n              setIsSharing(true);\n              shareEntry.mutate(\n                {\n                  emails: chips.map(c => displayWith(c)),\n                  permissions: selectedPermission.value,\n                  entryId: entry.id,\n                },\n                {\n                  onSuccess: () => {\n                    setChips([]);\n                  },\n                  onSettled: () => {\n                    setIsSharing(false);\n                  },\n                }\n              );\n            }}\n          >\n            <Trans message=\"Share\" />\n          </Button>\n        ) : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>\n  );\n}\n","import {useQuery} from '@tanstack/react-query';\nimport {ShareableLink} from '../shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {apiClient} from '@common/http/query-client';\n\nexport interface FetchShareableLinkResponse extends BackendResponse {\n  link: ShareableLink | null;\n}\n\nexport function useEntryShareableLink(entryId: number) {\n  return useQuery(\n    DriveQueryKeys.fetchEntryShareableLink(entryId!),\n    () => fetchLinkByEntryId(entryId!),\n    {enabled: !!entryId}\n  );\n}\n\nfunction fetchLinkByEntryId(\n  entryId: number\n): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .get(`file-entries/${entryId}/shareable-link`)\n    .then(response => response.data);\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\nimport {DriveQueryKeys} from '../../drive-query-keys';\nimport {message} from '@common/i18n/message';\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\n\ninterface DeleteLinkParams {\n  entryId: number;\n}\n\nfunction deleteShareableLink({\n  entryId,\n}: DeleteLinkParams): Promise<BackendResponse> {\n  return apiClient\n    .delete(`file-entries/${entryId}/shareable-link`)\n    .then(r => r.data);\n}\n\ninterface Payload {\n  entryId: number;\n}\nexport function useDeleteShareableLink() {\n  return useMutation(({entryId}: Payload) => deleteShareableLink({entryId}), {\n    onSuccess: (response, {entryId}) => {\n      queryClient.setQueryData<FetchShareableLinkResponse>(\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\n        {...response, link: null}\n      );\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\n  });\n}\n","export function randomString(length: number = 36) {\n  let random = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return random;\n}\n","import useClipboard from 'react-use-clipboard';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\nimport {Button} from '@common/ui/buttons/button';\nimport {ShareableLink} from '../../shareable-link/shareable-link';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {Switch} from '@common/ui/forms/toggle/switch';\nimport {randomString} from '@common/utils/string/random-string';\nimport {Trans} from '@common/i18n/trans';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useActiveDialogEntry} from '../../drive-store';\nimport {DriveEntry} from '../../files/drive-entry';\nimport {useSettings} from '@common/core/settings/use-settings';\n\ninterface ShareableLinkPanelProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusInput?: boolean;\n}\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput,\n}: ShareableLinkPanelProps) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading =\n    query.isLoading || createLink.isLoading || deleteLink.isLoading;\n  return (\n    <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center gap-14 justify-between pb-4 px-2\">\n        <Switch\n          checked={linkExists}\n          disabled={isLoading}\n          onChange={() => {\n            if (linkExists) {\n              deleteLink.mutate({entryId: entry.id});\n            } else {\n              createLink.mutate({entryId: entry.id});\n            }\n          }}\n        >\n          {linkExists ? (\n            <Trans message=\"Shareable link is created\" />\n          ) : (\n            <Trans message=\"Create shareable link\" />\n          )}\n        </Switch>\n        {linkExists && (\n          <Button\n            variant=\"link\"\n            color=\"primary\"\n            onClick={() => {\n              setActivePanel('linkSettings');\n            }}\n          >\n            <Trans message=\"Link settings\" />\n          </Button>\n        )}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>\n  );\n}\n\ninterface ShareableLinkInputProps {\n  link?: ShareableLink | null;\n  autoFocus?: boolean;\n}\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\n  const {base_url} = useSettings();\n  const {trans} = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000,\n  });\n  return (\n    <TextField\n      autoFocus={autoFocus}\n      disabled={!link}\n      className=\"mt-10\"\n      readOnly\n      value={linkUrl}\n      aria-label={trans({message: 'Shareable link'})}\n      onFocus={e => {\n        (e.target as HTMLInputElement).select();\n      }}\n      endAppend={\n        <Button\n          className=\"min-w-100\"\n          variant=\"flat\"\n          color=\"primary\"\n          onClick={setCopied}\n        >\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>\n      }\n    />\n  );\n}\n","import {useMutation} from '@tanstack/react-query';\nimport {UseFormReturn} from 'react-hook-form';\nimport {apiClient, queryClient} from '@common/http/query-client';\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\nimport {DriveQueryKeys} from '../../drive-query-keys';\n\nexport interface UpdateShareableLinkPayload {\n  allowEdit: boolean;\n  allowDownload: boolean;\n  expiresAt: string;\n  password: string;\n  entryId: number;\n}\n\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\n  return apiClient\n    .put(`file-entries/${entryId}/shareable-link`, payload)\n    .then(response => response.data);\n}\n\nexport function useUpdateShareableLink(\n  form: UseFormReturn<UpdateShareableLinkPayload>\n) {\n  return useMutation(\n    (payload: UpdateShareableLinkPayload) => updateShareableLink(payload),\n    {\n      onSuccess: (data, {entryId}) => {\n        queryClient.setQueryData<FetchShareableLinkResponse>(\n          DriveQueryKeys.fetchEntryShareableLink(entryId),\n          data\n        );\n      },\n      onError: r => onFormQueryError(r, form),\n    }\n  );\n}\n","import {useForm} from 'react-hook-form';\nimport {Fragment, ReactElement, useState} from 'react';\nimport clsx from 'clsx';\nimport {m} from 'framer-motion';\nimport {getLocalTimeZone, now} from '@internationalized/date';\nimport {Button} from '@common/ui/buttons/button';\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport type {ShareDialogActivePanel} from '../share-dialog';\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\nimport {Form} from '@common/ui/forms/form';\nimport {\n  UpdateShareableLinkPayload,\n  useUpdateShareableLink,\n} from '../../shareable-link/queries/use-update-shareable-link';\nimport {FormSwitch, Switch} from '@common/ui/forms/toggle/switch';\nimport {toast} from '@common/ui/toast/toast';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {Trans} from '@common/i18n/trans';\nimport {message} from '@common/i18n/message';\nimport {FileEntry} from '@common/uploads/file-entry';\n\ninterface LinkSettingsDialogProps {\n  className?: string;\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: FileEntry;\n}\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry,\n}: LinkSettingsDialogProps) {\n  const {formId} = useDialogContext();\n  const {data} = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm<UpdateShareableLinkPayload>({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id,\n    },\n  });\n  const updateLink = useUpdateShareableLink(form);\n\n  return (\n    <Fragment>\n      <DialogHeader\n        onDismiss={() => {\n          setActivePanel('main');\n        }}\n      >\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div\n          key=\"link-settings-content\"\n          className=\"min-h-[335px]\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <Form\n            id={formId}\n            className={className}\n            form={form}\n            onSubmit={value => {\n              updateLink.mutate(value, {\n                onSuccess: () => {\n                  setActivePanel('main');\n                  toast(message('Link settings saved'));\n                },\n              });\n            }}\n          >\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            setActivePanel('main');\n          }}\n        >\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button\n          type=\"submit\"\n          form={formId}\n          variant=\"flat\"\n          color=\"primary\"\n          disabled={updateLink.isLoading}\n        >\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>\n  );\n}\n\nconst minDate = now(getLocalTimeZone());\n\ninterface LinkExpirationOptionProps {\n  showField: boolean;\n}\nfunction LinkExpirationOption({\n  showField: showFieldDefault,\n}: LinkExpirationOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && (\n          <FormDatePicker\n            min={minDate}\n            name=\"expiresAt\"\n            granularity=\"minute\"\n            className=\"mt-20\"\n            aria-label={trans({\n              message: 'Link expiration date and time',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkPasswordOptionProps {\n  showField: boolean;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault,\n}: LinkPasswordOptionProps) {\n  const {trans} = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return (\n    <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch\n          checked={showField}\n          onChange={e => {\n            setShowField(e.target.checked);\n          }}\n        >\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && (\n          <FormTextField\n            type=\"password\"\n            autoFocus\n            name=\"password\"\n            className=\"mt-20\"\n            aria-label={trans({message: 'Link password'})}\n            description={\n              <Trans message=\"Password will not be requested when viewing the link as file owner.\" />\n            }\n            placeholder={trans({\n              message: 'Enter new password...',\n            })}\n          />\n        )}\n      </div>\n    </LinkOption>\n  );\n}\n\ninterface LinkOptionProps {\n  children: [ReactElement, ReactElement];\n  showBorder?: boolean;\n}\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\n  const [title, content] = children;\n  return (\n    <div className={clsx(showBorder && 'border-b mb-20 pb-20')}>\n      <div className=\"text-sm font-medium mb-8\">{title}</div>\n      {content}\n    </div>\n  );\n}\n","import {Fragment, useState} from 'react';\nimport {AnimatePresence, m} from 'framer-motion';\nimport {SharePanel} from './share-panel';\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {DriveEntry} from '../files/drive-entry';\nimport {useQuery} from '@tanstack/react-query';\nimport {apiClient} from '@common/http/query-client';\nimport {DriveQueryKeys} from '../drive-query-keys';\n\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\n\ninterface ShareDialogProps {\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput,\n}: ShareDialogProps) {\n  const {\n    data: {fileEntry},\n  } = useQuery(\n    DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    () => {\n      return apiClient\n        .get(`drive/file-entries/${initialEntry.id}/model`)\n        .then(response => response.data as {fileEntry: DriveEntry});\n    },\n    {\n      initialData: {fileEntry: initialEntry},\n    }\n  );\n\n  const [activePanel, setActivePanel] =\n    useState<ShareDialogActivePanel>('main');\n\n  return (\n    <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? (\n          <LinkSettingsDialog\n            key=\"one\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n          />\n        ) : (\n          <MainDialog\n            key=\"two\"\n            setActivePanel={setActivePanel}\n            entry={fileEntry}\n            focusLinkInput={focusLinkInput}\n          />\n        )}\n      </AnimatePresence>\n    </Dialog>\n  );\n}\n\ninterface MainDialogProps {\n  setActivePanel: (name: ShareDialogActivePanel) => void;\n  entry: DriveEntry;\n  focusLinkInput?: boolean;\n}\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\n  return (\n    <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div\n          key=\"share-content\"\n          animate={{opacity: 1, y: 0}}\n          initial={{opacity: 0, y: 20}}\n          exit={{opacity: 0, y: -20}}\n          transition={{duration: 0.1}}\n        >\n          <SharePanel className=\"border-b pb-30 mb-30\" entry={entry} />\n          <ShareableLinkPanel\n            setActivePanel={setActivePanel}\n            entry={entry}\n            focusInput={!!focusLinkInput}\n          />\n        </m.div>\n      </DialogBody>\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\nimport {Item} from '@common/ui/forms/listbox/item';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface SearchComboBoxProps {\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogSearch({\n  allFolders,\n  onFolderSelected,\n}: SearchComboBoxProps) {\n  const {trans} = useTrans();\n  const searchLabel = trans({message: 'Search folders'});\n  return (\n    <ComboBox\n      size=\"sm\"\n      maxItems={10}\n      placeholder={searchLabel}\n      aria-label={searchLabel}\n      className=\"pt-20\"\n      endAdornmentIcon={<SearchIcon />}\n      items={allFolders}\n      clearInputOnItemSelection\n      onItemSelected={value => {\n        const folderId = parseInt(value as string);\n        const folder = allFolders.find(f => f.id === folderId);\n        if (folder) {\n          onFolderSelected(folder);\n        }\n      }}\n    >\n      {item => (\n        <Item key={item.id} value={item.id}>\n          {item.name}\n        </Item>\n      )}\n    </ComboBox>\n  );\n}\n","import React from 'react';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\nimport {FolderIcon} from '@common/icons/material/Folder';\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderBreadCrumbsProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  rootFolder: PartialFolder;\n  onFolderSelected: (folder: PartialFolder) => void;\n}\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  allFolders,\n  rootFolder,\n  onFolderSelected,\n}: FolderBreadCrumbsProps) {\n  const path: PartialFolder[] = selectedFolder.path\n    .split('/')\n    .map(part => {\n      const folderId = parseInt(part);\n      return allFolders.find(folder => folderId === folder.id);\n    })\n    .filter(f => !!f) as PartialFolder[];\n  const fullPath: PartialFolder[] = [rootFolder, ...path];\n\n  const previous = path[path.length - 2];\n\n  return (\n    <div className=\"flex items-center border-b pb-10 gap-6\">\n      <IconButton\n        className=\"flex-shrink-0\"\n        variant=\"outline\"\n        size=\"xs\"\n        radius=\"rounded\"\n        disabled={!previous && !selectedFolder.id}\n        onClick={() => {\n          onFolderSelected(previous || rootFolder);\n        }}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        {fullPath.map(item => {\n          return (\n            <BreadcrumbItem\n              onSelected={() => {\n                onFolderSelected(item);\n              }}\n              key={item.id || 'root'}\n              className=\"flex items-center gap-8\"\n            >\n              {!item.id && <FolderIcon className=\"icon-sm\" />}\n              {item.name}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__88476671__\"","import React, {useMemo} from 'react';\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {ChevronRightIcon} from '@common/icons/material/ChevronRight';\nimport {Trans} from '@common/i18n/trans';\nimport {List, ListItem} from '@common/ui/list/list';\nimport myFilesSvg from './my-files.svg';\nimport {PartialFolder} from '../../utils/can-move-entries-into';\n\ninterface FolderListProps {\n  selectedFolder: PartialFolder;\n  allFolders: PartialFolder[];\n  onFolderSelected: (folder: PartialFolder) => void;\n}\n\nexport function MoveEntriesDialogFolderList(props: FolderListProps) {\n  const {onFolderSelected, selectedFolder, allFolders} = props;\n\n  const subFolders = useMemo(() => {\n    const parentId = selectedFolder.id || null;\n    return allFolders.filter(f => f.parent_id === parentId);\n  }, [selectedFolder.id, allFolders]);\n\n  if (!subFolders.length) {\n    return (\n      <IllustratedMessage\n        size=\"xs\"\n        className=\"pt-64 pb-20 min-h-288\"\n        image={<SvgImage src={myFilesSvg} />}\n        title={\n          <Trans\n            message={`There are no subfolders in \":folder\"`}\n            values={{folder: selectedFolder.name}}\n          />\n        }\n      />\n    );\n  }\n\n  return (\n    <List className=\"h-288 overflow-y-auto\">\n      {subFolders.map(folder => {\n        return (\n          <ListItem\n            className=\"border-b min-h-48\"\n            key={folder.id}\n            onSelected={() => {\n              onFolderSelected(folder);\n            }}\n            startIcon={<FileTypeIcon type=\"folder\" />}\n            endIcon={<ChevronRightIcon size=\"md\" />}\n          >\n            {folder.name}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React, {useState} from 'react';\nimport {Button} from '@common/ui/buttons/button';\nimport {useFolders} from '../../queries/use-folders';\nimport {useMoveEntries} from '../../queries/use-move-entries';\nimport {NewFolderDialog} from '../new-folder-dialog';\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\nimport {Trans} from '@common/i18n/trans';\nimport {RootFolderPage} from '../../../drive-page/drive-page';\nimport {DriveEntry} from '../../drive-entry';\nimport {useDriveStore} from '../../../drive-store';\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\nimport {\n  canMoveEntriesInto,\n  PartialFolder,\n} from '../../utils/can-move-entries-into';\n\ninterface MoveEntriesDialogProps {\n  entries: DriveEntry[];\n}\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\n  const {data} = useFolders();\n  const allFolders = data?.folders || [];\n  const activePage = useDriveStore(s => s.activePage);\n  const [selectedFolder, setSelectedFolder] = useState<PartialFolder>(\n    activePage?.folder || RootFolderPage.folder\n  );\n\n  return (\n    <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans\n          message=\"Move [one ‘:name‘|other :count items]\"\n          values={{\n            count: entries.length,\n            name: entries[0].name,\n          }}\n        />\n      </DialogHeader>\n      <DialogBody>\n        <div className=\"text-sm\">\n          <Trans message=\"Select a destination folder.\" />\n        </div>\n        <MoveEntriesDialogSearch\n          allFolders={allFolders}\n          onFolderSelected={setSelectedFolder}\n        />\n        <div className=\"mt-40 mb-20\">\n          <MoveEntriesDialogBreadcrumbs\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            rootFolder={RootFolderPage.folder}\n            onFolderSelected={setSelectedFolder}\n          />\n          <MoveEntriesDialogFolderList\n            selectedFolder={selectedFolder}\n            allFolders={allFolders}\n            onFolderSelected={setSelectedFolder}\n          />\n        </div>\n      </DialogBody>\n      <Footer\n        selectedFolder={selectedFolder}\n        setSelectedFolder={setSelectedFolder}\n        entries={entries}\n      />\n    </Dialog>\n  );\n}\n\ninterface FooterProps {\n  selectedFolder: PartialFolder;\n  setSelectedFolder: (folder: PartialFolder) => void;\n  entries: DriveEntry[];\n}\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\n  const {close} = useDialogContext();\n  const isMobile = useIsMobileMediaQuery();\n  const moveEntries = useMoveEntries();\n  return (\n    <DialogFooter\n      className=\"border-t\"\n      startAction={\n        <DialogTrigger\n          type=\"modal\"\n          onClose={folder => {\n            if (folder) {\n              setSelectedFolder(folder);\n            }\n          }}\n        >\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\n            <Trans message=\"New Folder\" />\n          </Button>\n          <NewFolderDialog parentId={selectedFolder.id} />\n        </DialogTrigger>\n      }\n    >\n      {!isMobile && (\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n      )}\n      <Button\n        type=\"submit\"\n        variant=\"flat\"\n        color=\"primary\"\n        disabled={\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isLoading\n        }\n        onClick={() => {\n          moveEntries.mutate(\n            {\n              destinationId: selectedFolder.id,\n              entryIds: entries.map(e => e.id),\n            },\n            {onSuccess: close}\n          );\n        }}\n      >\n        <Trans message=\"Move here\" />\n      </Button>\n    </DialogFooter>\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {useDeleteEntries} from '../queries/use-delete-entries';\nimport {driveState} from '../../drive-store';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function DeleteEntriesForeverDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const deleteEntries = useDeleteEntries();\n\n  const message =\n    entries.length === 1 ? (\n      <Trans\n        message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\"\n        values={{name: entries[0].name}}\n      />\n    ) : (\n      <Trans\n        message=\":count items will be deleted forever and you won't be able to restore them.\"\n        values={{count: entries.length}}\n      />\n    );\n\n  return (\n    <ConfirmationDialog\n      isDanger\n      title={<Trans message=\"Delete forever?\" />}\n      body={message}\n      confirm={<Trans message=\"Delete forever\" />}\n      onConfirm={() => {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: true,\n        });\n        driveState().selectEntries([]);\n      }}\n    />\n  );\n}\n","import {DriveEntry} from '../drive-entry';\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\nimport {Trans} from '@common/i18n/trans';\nimport {driveState} from '../../drive-store';\nimport {useRestoreEntries} from '../queries/use-restore-entries';\n\ninterface DeleteEntriesForeverDialogProps {\n  entries: DriveEntry[];\n}\nexport function BlockTrashFolderViewDialog({\n  entries,\n}: DeleteEntriesForeverDialogProps) {\n  const restoreEntries = useRestoreEntries();\n\n  return (\n    <ConfirmationDialog\n      title={<Trans message=\"This folder is in your trash\" />}\n      body={<Trans message=\"To view this folder, restore it from the trash.\" />}\n      confirm={<Trans message=\"Restore\" />}\n      onConfirm={() => {\n        restoreEntries.mutate({\n          entryIds: entries.map(e => e.id),\n        });\n        driveState().selectEntries([]);\n      }}\n    />\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\nimport {RenameEntryDialog} from './rename-entry-dialog';\nimport {NewFolderDialog} from './new-folder-dialog';\nimport {EntryPreviewDialog} from './entry-preview-dialog';\nimport {ShareDialog} from '../../share-dialog/share-dialog';\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\nimport {DeleteEntriesForeverDialog} from './delete-entries-forever-dialog';\nimport {BlockTrashFolderViewDialog} from './block-trash-folder-view-dialog';\n\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n\n  return (\n    <DialogTrigger\n      type=\"modal\"\n      isOpen={!!dialog}\n      onClose={() => {\n        driveState().setActiveActionDialog(null);\n      }}\n    >\n      {dialog}\n    </DialogTrigger>\n  );\n}\n\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    case 'confirmAndDeleteForever':\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\n    case 'trashFolderBlock':\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}\n","import React, {useState} from 'react';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\nimport {SearchPage} from '../drive-page/drive-page';\nimport {useTrans} from '@common/i18n/use-trans';\nimport {useDriveStore} from '../drive-store';\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\nimport {useSearchParams} from 'react-router-dom';\nimport {IconButton} from '@common/ui/buttons/icon-button';\n\nexport function NavbarSearch() {\n  const {trans} = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n\n  return (\n    <form\n      className=\"flex-auto max-w-620\"\n      onSubmit={e => {\n        e.preventDefault();\n        navigate(\n          {\n            pathname: SearchPage.path,\n            search: `?query=${inputValue}`,\n          },\n          {replace: true}\n        );\n      }}\n    >\n      <TextField\n        size=\"sm\"\n        background=\"bg-paper\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        onFocus={() => {\n          if (activePage !== SearchPage) {\n            navigate(SearchPage.path);\n          }\n        }}\n        startAdornment={\n          <IconButton type=\"submit\" radius=\"rounded\">\n            <SearchIcon />\n          </IconButton>\n        }\n        className=\"flex-auto max-w-620\"\n        placeholder={trans({message: 'Search'})}\n        aria-label={trans({message: 'Search files and folders'})}\n      />\n    </form>\n  );\n}\n","import {InteractableEvent} from '../interactable-event';\nimport {useEffect, useId, useRef} from 'react';\nimport {dragMonitors, DragSessionStatus} from './drag-state';\nimport {ConnectedDraggable} from './use-draggable';\n\nexport interface DragMonitor {\n  type: string;\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\n  onDragEnd?: (\n    e: InteractableEvent,\n    dragTarget: ConnectedDraggable,\n    status: DragSessionStatus\n  ) => void;\n}\n\nexport function useDragMonitor(monitor: DragMonitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}\n","import {useDragMonitor} from '@common/ui/interactions/dnd/use-drag-monitor';\nimport React, {memo, useRef, useState} from 'react';\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\nimport {FileEntry} from '@common/uploads/file-entry';\nimport {\n  DragSessionStatus,\n  droppables,\n} from '@common/ui/interactions/dnd/drag-state';\nimport {AnimatePresence, m} from 'framer-motion';\nimport clsx from 'clsx';\nimport {\n  isFolderTreeDragId,\n  makeFolderTreeDragId,\n} from '../layout/sidebar/folder-tree-drag-id';\nimport {InteractableEvent} from '@common/ui/interactions/interactable-event';\nimport {useDriveStore} from '../drive-store';\nimport {ConnectedDraggable} from '@common/ui/interactions/dnd/use-draggable';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface DragPreviewState {\n  entries?: FileEntry[];\n  e?: InteractableEvent;\n  status?: DragSessionStatus;\n  draggingTreeItem?: boolean;\n}\n\nexport function EntryDragPreview() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\n  const [state, setState] = useState<DragPreviewState>({});\n\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\n        });\n        setPoints({start: e});\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {...prev, e: e};\n      });\n      setPoints(prev => {\n        return {...prev, end: e};\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({status});\n    },\n  });\n\n  let preview = null;\n\n  if (state.entries && state.e) {\n    preview = (\n      <div\n        ref={ref}\n        style={\n          state.e\n            ? {\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n                width: `${state.e.rect.width}px`,\n              }\n            : undefined\n        }\n        className=\"fixed isolate left-0 top-0 pointer-events-none\"\n      >\n        {state.entries.map((item, index) => (\n          <EntryPreview\n            key={item.id}\n            index={index}\n            entry={item}\n            points={points}\n            state={state}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\n\ninterface EntryPreviewProps {\n  entry: FileEntry;\n  index: number;\n  points?: {start?: Point; end?: Point};\n  state: DragPreviewState;\n}\nconst EntryPreview = memo(\n  ({entry, points, index, state}: EntryPreviewProps) => {\n    const viewMode = useDriveStore(s => s.viewMode);\n    const droppableId = state.draggingTreeItem\n      ? makeFolderTreeDragId(entry)\n      : entry.id;\n    const target = droppables.get(droppableId);\n    if (!target?.rect || !points?.start) return null;\n    const rect = target.rect;\n    const itemCount = state.entries?.length || 0;\n\n    const exitVariant = (status: DragSessionStatus) => {\n      if (status === 'dropSuccess') {\n        return {\n          x: 0,\n          y: 0,\n          opacity: 0,\n          transition: {duration: 0.1, delay: 0},\n        };\n      }\n      return {\n        x: rect.left - (points.end?.x || 0),\n        y: rect.top - (points.end?.y || 0),\n        width: `${state.e?.rect.width}px`,\n      };\n    };\n\n    return (\n      <m.div\n        key={entry.id}\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\n        initial={{\n          x: rect.left - points.start.x,\n          y: rect.top - points.start.y,\n          width: `${state.e?.rect.width}px`,\n        }}\n        animate={{\n          x: 0,\n          y: 0,\n          // in list/table mode limit preview size to 288px, but start and end the animation\n          // at full width, so it returns to original position at original size smoothly\n          width: viewMode === 'list' ? 288 : undefined,\n        }}\n        exit={exitVariant as any}\n        style={{\n          // in grid mode simply use the width of the draggable item\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n          height: `${state.e?.rect.height}px`,\n        }}\n        className={clsx(\n          'absolute bg-paper whitespace-nowrap rounded border border-primary-light max-h-48',\n          index < 2 && 'shadow',\n          index === 0 && 'z-10 top-0 left-0',\n          index > 0 && 'top-6 left-6'\n        )}\n      >\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"text-sm h-full flex justify-center items-center px-16 gap-10 bg-primary-light/20 overflow-hidden\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto text-ellipsis overflow-hidden\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>\n    );\n  }\n);\n\ninterface EntryCountProps {\n  count: number;\n}\nconst EntryCount = memo(({count}: EntryCountProps) => {\n  return (\n    <m.div\n      key=\"entryCount\"\n      initial={{opacity: 0}}\n      animate={{opacity: 1, transition: {delay: 0.1}}}\n      exit={{opacity: 0}}\n      transition={{duration: 0.1}}\n      className=\"absolute -top-6 shadow-lg -right-6 z-30 rounded-full bg-danger text-white w-20 h-20 flex items-center justify-center text-sm font-bold z-10\"\n    >\n      {count}\n    </m.div>\n  );\n});\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\nimport React, {useContext} from 'react';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {Trans} from '@common/i18n/trans';\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {ViewListIcon} from '@common/icons/material/ViewList';\nimport {ViewModuleIcon} from '@common/icons/material/ViewModule';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {InfoIcon} from '@common/icons/material/Info';\nimport {DriveSortButton} from './sorting/drive-sort-button';\n\nexport function DriveContentHeader() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  return (\n    <DashboardContentHeader className=\"px-8 md:px-26 py-4 flex items-center gap-20 border-b h-60\">\n      {isMobileMode ? (\n        <DriveSortButton isDisabled={activePage?.disableSort} />\n      ) : (\n        <PageBreadcrumbs />\n      )}\n      <div className=\"text-muted ml-auto flex-shrink-0\">\n        <ToggleViewModeButton />\n        <ToggleDetailsButton />\n      </div>\n    </DashboardContentHeader>\n  );\n}\n\nfunction ToggleViewModeButton() {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const tooltip =\n    viewMode === 'grid' ? (\n      <Trans message=\"List view\" />\n    ) : (\n      <Trans message=\"Grid view\" />\n    );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        onClick={() => {\n          driveState().setViewMode(\n            driveState().viewMode === 'list' ? 'grid' : 'list'\n          );\n        }}\n      >\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nfunction ToggleDetailsButton() {\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\n    DashboardLayoutContext\n  );\n  const tooltip = status ? (\n    <Trans message=\"Hide details\" />\n  ) : (\n    <Trans message=\"Show details\" />\n  );\n  return (\n    <Tooltip label={tooltip}>\n      <IconButton\n        size=\"md\"\n        color={status === 'open' ? 'primary' : null}\n        onClick={() => {\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\n        }}\n      >\n        <InfoIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\nimport {Link, useLocation, useParams} from 'react-router-dom';\nimport {Sidebar} from './sidebar/sidebar';\nimport {FileView} from '../file-view/file-view';\nimport {UploadQueue} from '../uploading/upload-queue';\nimport {driveState, useDriveStore} from '../drive-store';\nimport {\n  DRIVE_PAGES,\n  makePartialFolderPage,\n  SearchPage,\n} from '../drive-page/drive-page';\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\nimport {NavbarSearch} from '../search/navbar-search';\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\nimport {DriveContentHeader} from './drive-content-header';\nimport {IconButton} from '@common/ui/buttons/icon-button';\nimport {SearchIcon} from '@common/icons/material/Search';\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\nimport {CloseIcon} from '@common/icons/material/Close';\nimport {Trans} from '@common/i18n/trans';\nimport {EntryActionList} from '../entry-actions/entry-action-list';\nimport {CreateNewButton} from './create-new-button';\nimport {StaticPageTitle} from '@common/seo/static-page-title';\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\n\nexport function DriveLayout() {\n  const {pathname} = useLocation();\n  const {hash} = useParams();\n  const {workspaceId} = useActiveWorkspaceId();\n  const activePage = useDriveStore(s => s.activePage);\n\n  useEffect(() => {\n    driveState().setActivePage(\n      DRIVE_PAGES.find(p => p.path === pathname) || makePartialFolderPage(hash!)\n    );\n  }, [pathname, hash]);\n\n  const urlsContextValue = useMemo(() => {\n    return {workspaceId};\n  }, [workspaceId]);\n\n  useEffect(() => {\n    return () => {\n      driveState().reset();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      {activePage?.label && (\n        <StaticPageTitle>{activePage.label}</StaticPageTitle>\n      )}\n      <FileUploadProvider>\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\n          <DashboardLayout\n            name=\"drive\"\n            onDragOver={e => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.dataTransfer.dropEffect = 'none';\n            }}\n            onDrop={e => {\n              // prevent files from desktop from blowing away the document\n              e.preventDefault();\n            }}\n          >\n            <Navbar />\n            <DashboardSidenav position=\"left\" size=\"md\">\n              <Sidebar />\n            </DashboardSidenav>\n            <DriveContentHeader />\n            <DashboardContent>\n              <FileView />\n            </DashboardContent>\n            <UploadQueue />\n            <DriveDialogsContainer />\n            <DashboardSidenav position=\"right\" size=\"lg\">\n              <DetailsSidebar />\n            </DashboardSidenav>\n          </DashboardLayout>\n        </FileEntryUrlsContext.Provider>\n        <EntryDragPreview />\n      </FileUploadProvider>\n    </Fragment>\n  );\n}\n\nfunction Navbar() {\n  const {isMobileMode} = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n\n  const children = isMobileMode ? null : <NavbarSearch />;\n  const searchButton = (\n    <IconButton elementType={Link} to={SearchPage.path}>\n      <SearchIcon />\n    </IconButton>\n  );\n\n  const mobileRightChildren = (\n    <Fragment>\n      {activePage !== SearchPage && searchButton}\n      <CreateNewButton isCompact />\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <DashboardNavbar\n        rightChildren={isMobileMode && mobileRightChildren}\n        menuPosition=\"drive-navbar\"\n      >\n        {children}\n      </DashboardNavbar>\n      {isMobileMode && <FloatingActionList />}\n    </Fragment>\n  );\n}\n\nfunction FloatingActionList() {\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\n  if (!entriesSelected) return null;\n  return (\n    <div className=\"fixed bg-primary w-full h-54 text-on-primary shadow-xl z-10 rounded top-0 right-0 flex items-center justify-center gap-10 px-6\">\n      <IconButton\n        onClick={() => {\n          driveState().selectEntries([]);\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\n      <EntryActionList className=\"ml-auto\" />\n    </div>\n  );\n}\n","import {RouteObject, useRoutes} from 'react-router-dom';\nimport React from 'react';\nimport {ShareableLinkPage} from './shareable-link/shareable-link-page/shareable-link-page';\nimport {DriveLayout} from './layout/drive-layout';\nimport {AuthRoute} from '@common/auth/guards/auth-route';\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\n\nconst DriveRouteConfig: RouteObject[] = [\n  {\n    path: '/',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/folders/:hash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/shares',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/recent',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/starred',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/trash',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {\n    path: '/search',\n    element: (\n      <AuthRoute>\n        <DriveLayout />\n      </AuthRoute>\n    ),\n  },\n  {path: 's/:hash', element: <ShareableLinkPage />},\n  {path: '*', element: <NotFoundPage />},\n];\n\nexport default function DriveRoutes() {\n  return useRoutes(DriveRouteConfig);\n}\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","pageParam","query","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","_state$data","_state$data2","state","result","isFetching","isRefetching","isFetchingNextPage","isFetchingPreviousPage","hasNextPage","hasPreviousPage","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs","useBaseQuery","DriveQueryKeys","params","key","hash","entryId","id","invalidateEntryQueries","queryClient","useLinkPageStore","create","immer","set","getFromLocalStorage","value","mode","setInLocalStorage","linkPageState","fetchLinkByHash","page","order","password","apiClient","response","useShareableLinkPage","useParams","orderBy","orderDir","s","isPasswordProtected","lastResponse","currentPage","lastPage","retryCount","e","isPasswordInvalidResponse","_a","_b","p","axios","checkLinkPassword","linkHash","r","useCheckLinkPassword","useMutation","props","err","showHttpErrorToast","message","importIntoOwnDrive","linkId","useImportIntoOwnDrive","toast","ShareableLinkPageActionButtons","link","user","isLoggedIn","useAuth","downloadUrl","useFileEntryUrls","entry","alreadyImported","users","find","u","allow_download","Button","_jsx","FileDownloadIcon","downloadFileFromUrl","Trans","allow_edit","MenuTrigger","mutate","IconButton","isLoading","KeyboardArrowDownIcon","_jsxs","Menu","MenuItem","ImportExportIcon","ShareableLinkNavbar","Navbar","type","FileTypeIcon","name","PasswordPage","trans","useTrans","fieldLabel","setPassword","useState","checkPassword","split","passwordIsInvalid","data","matches","SvgImage","secureFilesSvg","preventDefault","TextField","target","BaseFileGridItem","React","forwardRef","className","isSelected","isMobileMode","footerAdornment","domProps","ref","clsx","FileThumbnail","Footer","isMobile","adornment","FolderPreviewFileGrid","entries","onEntrySelected","map","index","formatFileSize","memoize","bytes","prettyBytes","fileTableColumns","allowsSorting","header","body","width","FormattedDate","updated_at","file_size","mobileColumns","filter","config","FolderPreviewFileTable","sortDescriptor","activeSort","useIsMobileMediaQuery","Table","setActiveSort","item","buildFolderHash","folderHash","useNavigateToSubfolder","navigate","useNavigate","FolderPreviewFileView","pathname","useLocation","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","viewMode","sentinelRef","useRef","fetchNextPage","isPreviousData","useEffect","undefined","sentinelEl","current","observer","IntersectionObserver","isIntersecting","observe","unobserve","ProgressCircle","handlePreview","folderEntries","Fragment","AdHost","AnimatePresence","m","opacityAnimation","DialogTrigger","FilePreviewDialog","DashboardContentHeader","children","useFolderPath","isEnabled","useQuery","fetchFolderPath","FolderPreviewBreadcrumb","folder","shareable_link","content","items","path","forEach","parent","push","label","_Fragment","Breadcrumb","BreadcrumbItem","AVAILABLE_SORTS","EntriesSortButton","descriptor","onChange","isDisabled","column","direction","sort","SortIcon","MenuSection","FolderPreviewHeader","hasEntry","setViewMode","GridViewIcon","shareSvg","FolderPreview","isFetched","showEmptyMessage","length","DashboardLayout","DashboardNavbar","FileUploadProvider","DashboardContent","EmptyMessage","IllustratedMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","status","NotFoundPage","FileEntryUrlsContext","useStorageSummary","fetchStorageSummary","formatResponse","percentage","Meter","ProgressBarBase","StorageMeter","used","usedFormatted","available","availableFormatted","StorageIcon","useCreateWorkspace","form","createWorkspace","WorkspaceQueryKeys","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","getValues","onSuccess","workspace","FormTextField","DialogFooter","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","ResendInvite","inviteId","useResendInvite","matcher","isEmail","string","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","PersonalWorkspace","LeaveWorkspaceConfirmation","ConfirmationDialog","WorkspaceMembersDialog","Manager","can","usePermissions","members","invites","invite","InviteChipField","GroupIcon","MemberListItem","model_type","x","opacity","duration","avatar","display_name","MemberDisplayNameAppend","email","MemberActions","authUser","update","delete","permissions","authMember","mb","permission","is_owner","selectedRole","setSelectedRole","role_id","changeRole","isOwner","isCurrentUser","roleSelector","role_name","RoleMenuTrigger","roleId","RemoveMemberButton","chips","setChips","allEmailsValid","every","chip","invalid","displayWith","description","inviteMembers","useValueLists","workspaceRoles","ChipField","errorMessage","emails","c","isConfirmed","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","size","role","newValue","ArrowDropDownIcon","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","defaultValues","deleteWorkspace","useDeleteWorkspace","payload","WorkspaceSelector","trigger","propsTrigger","useUserWorkspaces","activeWorkspace","w","dialog","setDialog","selectorIsOpen","setSelectorIsOpen","hasPermission","defaultTrigger","ButtonBase","default","count","members_count","UnfoldMoreIcon","cloneElement","onClick","WorkspaceItem","stopPropagation","AddIcon","DialogContainer","isActive","CheckIcon","ManageButton","DeleteWorkspaceConfirmation","PersonAddIcon","owner_id","EditIcon","DeleteIcon","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","defaultSortDescriptor","makeFolderPage","makePartialFolderPage","canUpload","getPathForFolder","hasActions","isFolderPage","noContentMessage","title","image","rootFolder","getBootstrapData","RootFolderPage","RecentPage","disableSort","queryParams","recentOnly","SearchPage","isSearchingOrFiltering","SharesPage","sharedOnly","TrashPage","deletedOnly","StarredPage","starredOnly","DRIVE_PAGES","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","stableArray","enableMapSet","initialState","useDriveStore","get","isOpen","activePageId","storedDescriptor","merge","driveState","useActiveDialogEntry","useMoveEntries","moveEntries","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","activePage","usage","parentId","uploads","useSettings","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","canMoveEntriesInto","targets","destination","destinationIsInTarget","destinationPath","part","useFolderDropAction","uploadFiles","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","TreeLabel","icon","expandedKeys","setExpandedKeys","selectedKeys","setSelectedKeys","useContext","isExpanded","includes","handleExpandIconClick","indexOf","newExpandedKeys","splice","Array","from","_","ArrowRightIcon","displayName","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","focusedNode","setFocusedNode","hasChildren","isFirstNode","isFocused","createEventHandler","focusNext","newKeys","parentEl","document","activeElement","parentElement","closest","focus","focusPrevious","focusFirst","focusLast","childNode","currentTarget","contains","relatedTarget","open","height","closed","overflow","Tree","useControlledState","defaultSelectedKeys","onExpandedKeysChange","onSelectedKeysChange","FocusScope","TreeRoot","FolderTree","sidebarExpandedKeys","tree","useMemo","folders","dataField","keys","setSidebarExpandedKeys","entryHash","findHash","FolderTreeItem","isRootFolder","isDragging","entriesBeingDragged","draggableProps","useDraggable","disabled","hidePreview","onDragStart","setEntriesBeingDragged","getData","selectEntries","onDragEnd","droppableProps","mergeProps","deselectEntries","setContextMenuData","clientX","y","clientY","BackupIcon","FolderIcon","deleteEntries","useDeleteEntries","entryIds","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","SidebarMenu","CustomMenu","DriveSidebar","action","TrashMenuItem","CustomMenuItem","types","onDragEnter","onDragLeave","CreateNewButton","isCompact","button","FileUploadIcon","openUploadWindow","multiple","directory","activeFolder","setActiveActionDialog","UploadFileIcon","DriveFolderUploadIcon","CreateNewFolderIcon","Sidebar","isSubscribed","billing","enable","Link","WorkspaceSwitcher","fetchEntries","setActiveFolder","newFolder","shallowEqual","usePaginatedEntries","searchParams","useSearchParams","isDisabledInSearch","getAllEntries","all","cache","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","BackendFilter","FilterControlType","CreatedAtFilter","UpdatedAtFilter","FilterOperator","alwaysShownFilters","f","SearchFilterList","DashboardLayoutContext","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_c","_d","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","createShareableLink","useCreateShareableLink","addStarToEntries","useAddStarToEntries","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","RemoveRedEyeIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","RestoreIcon","useDrivePageActions","useNewFolderAction","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","DeleteForeverIcon","EntryActionMenuTrigger","PageMenu","EntriesMenu","actions","BaseMenu","execute","createElement","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","Tooltip","MoreVertIcon","DriveContextMenu","contextMenuData","PageContextMenu","EntriesContextMenu","position","BaseContextMenu","ContextMenu","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","onContextMenu","has","useViewItemActionHandler","fileTableMobileColumns","hideHeader","align","padding","ActionsBody","selectedRows","TableContext","Checkbox","FileTable","performViewItemAction","setSortDescriptor","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","onLongPress","onPress","keyboardHandler","contextMenuHandler","onKeyDown","FooterAdornment","FileGrid","DriveSortButton","PageBreadcrumbs","useActiveWorkspace","rootItem","useRootItem","fetchStatus","isMenuItem","MixedText","workspace_id","owner","owns_entry","InfiniteScrollSentinel","isInitialLoading","marginTop","renderSentinelAs","Sentinel","DropTargetMask","isVisible","mask","FileView","containerProps","boxProps","handleContextMenu","handleKeybinds","isCtrlKeyPressed","Toolbar","UploadQueueItem","memo","style","mime","SizeInfo","FileStatus","fileUpload","fileUploads","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","pointerType","scale","UploadQueue","uploadQueueIsOpen","Header","UploadList","inProgressUploadsCount","activeUploadsCount","completedUploadsCount","clearInactive","setUploadQueueIsOpen","setTimeout","uploadsArray","values","virtualizer","useVirtualizer","getScrollElement","estimateSize","overscan","getTotalSize","getVirtualItems","virtualItem","upload","transform","start","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useSyncEntryTags","createComment","tags","useFileEntryTags","fetchTags","DetailsSidebarTags","TagChipField","syncTags","inputValue","setInputValue","setValue","handleChange","newTags","results","Item","DetailsSidebarProperties","GroupsIcon","Avatar","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","formState","isDirty","createFolder","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","findIndex","activeIndex","setActiveIndex","DriveActions","shareEntry","useShareEntry","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","view","PermissionSelector","getPermissionItemForUser","edit","entry_permissions","useChangePermission","changePermission","MemberList","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","userId","onError","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","useNormalizedModels","USER_MODEL","perPage","enabled","suggest_emails","onSettled","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","autoFocus","base_url","linkUrl","isCopied","setCopied","useClipboard","successDuration","select","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","allowDownload","allowEdit","expiresAt","expires_at","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showField","showFieldDefault","setShowField","checked","FormDatePicker","showBorder","ShareDialog","initialEntry","focusLinkInput","fileEntry","fetchFileEntry","then","initialData","activePanel","MainDialog","MoveEntriesDialogSearch","allFolders","onFolderSelected","searchLabel","ComboBox","folderId","parseInt","MoveEntriesDialogBreadcrumbs","selectedFolder","fullPath","previous","ArrowBackIcon","myFilesSvg","MoveEntriesDialogFolderList","subFolders","parent_id","List","ListItem","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","destinationId","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","activeActionDialog","getDialog","NavbarSearch","search","replace","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","draggingTreeItem","onDragMove","prev","end","EntryPreview","droppableId","itemCount","exitVariant","transition","delay","left","top","bounce","EntryCount","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","ViewListIcon","ViewModuleIcon","rightSidenavStatus","InfoIcon","DriveLayout","setActivePage","urlsContextValue","reset","StaticPageTitle","dataTransfer","dropEffect","DashboardSidenav","searchButton","mobileRightChildren","FloatingActionList","entriesSelected","DriveRouteConfig","element","AuthRoute","DriveRoutes","useRoutes"],"mappings":"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"}